/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "maxY": 84431.0, "series": [{"data": [[0.0, 15.0], [0.1, 16.0], [0.2, 17.0], [0.3, 17.0], [0.4, 17.0], [0.5, 17.0], [0.6, 17.0], [0.7, 18.0], [0.8, 18.0], [0.9, 18.0], [1.0, 18.0], [1.1, 18.0], [1.2, 18.0], [1.3, 18.0], [1.4, 18.0], [1.5, 18.0], [1.6, 18.0], [1.7, 18.0], [1.8, 18.0], [1.9, 18.0], [2.0, 18.0], [2.1, 18.0], [2.2, 18.0], [2.3, 18.0], [2.4, 19.0], [2.5, 19.0], [2.6, 19.0], [2.7, 19.0], [2.8, 19.0], [2.9, 19.0], [3.0, 19.0], [3.1, 19.0], [3.2, 19.0], [3.3, 19.0], [3.4, 19.0], [3.5, 19.0], [3.6, 19.0], [3.7, 19.0], [3.8, 19.0], [3.9, 19.0], [4.0, 19.0], [4.1, 19.0], [4.2, 19.0], [4.3, 19.0], [4.4, 19.0], [4.5, 19.0], [4.6, 19.0], [4.7, 19.0], [4.8, 19.0], [4.9, 19.0], [5.0, 19.0], [5.1, 19.0], [5.2, 19.0], [5.3, 19.0], [5.4, 20.0], [5.5, 20.0], [5.6, 20.0], [5.7, 20.0], [5.8, 20.0], [5.9, 20.0], [6.0, 20.0], [6.1, 20.0], [6.2, 20.0], [6.3, 20.0], [6.4, 20.0], [6.5, 20.0], [6.6, 20.0], [6.7, 20.0], [6.8, 20.0], [6.9, 20.0], [7.0, 20.0], [7.1, 20.0], [7.2, 20.0], [7.3, 20.0], [7.4, 20.0], [7.5, 20.0], [7.6, 20.0], [7.7, 20.0], [7.8, 20.0], [7.9, 20.0], [8.0, 20.0], [8.1, 20.0], [8.2, 20.0], [8.3, 20.0], [8.4, 20.0], [8.5, 20.0], [8.6, 20.0], [8.7, 20.0], [8.8, 20.0], [8.9, 20.0], [9.0, 20.0], [9.1, 20.0], [9.2, 20.0], [9.3, 20.0], [9.4, 20.0], [9.5, 21.0], [9.6, 21.0], [9.7, 21.0], [9.8, 21.0], [9.9, 21.0], [10.0, 21.0], [10.1, 21.0], [10.2, 21.0], [10.3, 21.0], [10.4, 21.0], [10.5, 21.0], [10.6, 21.0], [10.7, 21.0], [10.8, 21.0], [10.9, 21.0], [11.0, 21.0], [11.1, 21.0], [11.2, 21.0], [11.3, 21.0], [11.4, 21.0], [11.5, 21.0], [11.6, 21.0], [11.7, 21.0], [11.8, 21.0], [11.9, 21.0], [12.0, 21.0], [12.1, 21.0], [12.2, 21.0], [12.3, 21.0], [12.4, 21.0], [12.5, 21.0], [12.6, 21.0], [12.7, 21.0], [12.8, 21.0], [12.9, 21.0], [13.0, 21.0], [13.1, 21.0], [13.2, 21.0], [13.3, 21.0], [13.4, 22.0], [13.5, 22.0], [13.6, 22.0], [13.7, 22.0], [13.8, 22.0], [13.9, 22.0], [14.0, 22.0], [14.1, 22.0], [14.2, 22.0], [14.3, 22.0], [14.4, 22.0], [14.5, 22.0], [14.6, 22.0], [14.7, 22.0], [14.8, 22.0], [14.9, 22.0], [15.0, 22.0], [15.1, 22.0], [15.2, 22.0], [15.3, 22.0], [15.4, 22.0], [15.5, 22.0], [15.6, 22.0], [15.7, 22.0], [15.8, 22.0], [15.9, 22.0], [16.0, 22.0], [16.1, 22.0], [16.2, 22.0], [16.3, 22.0], [16.4, 23.0], [16.5, 23.0], [16.6, 23.0], [16.7, 23.0], [16.8, 23.0], [16.9, 23.0], [17.0, 23.0], [17.1, 23.0], [17.2, 23.0], [17.3, 23.0], [17.4, 23.0], [17.5, 23.0], [17.6, 23.0], [17.7, 23.0], [17.8, 23.0], [17.9, 23.0], [18.0, 23.0], [18.1, 23.0], [18.2, 23.0], [18.3, 23.0], [18.4, 23.0], [18.5, 23.0], [18.6, 24.0], [18.7, 24.0], [18.8, 24.0], [18.9, 24.0], [19.0, 24.0], [19.1, 24.0], [19.2, 24.0], [19.3, 24.0], [19.4, 24.0], [19.5, 24.0], [19.6, 24.0], [19.7, 24.0], [19.8, 24.0], [19.9, 24.0], [20.0, 24.0], [20.1, 24.0], [20.2, 25.0], [20.3, 25.0], [20.4, 25.0], [20.5, 25.0], [20.6, 25.0], [20.7, 25.0], [20.8, 25.0], [20.9, 25.0], [21.0, 25.0], [21.1, 25.0], [21.2, 25.0], [21.3, 25.0], [21.4, 26.0], [21.5, 26.0], [21.6, 26.0], [21.7, 26.0], [21.8, 26.0], [21.9, 26.0], [22.0, 26.0], [22.1, 26.0], [22.2, 26.0], [22.3, 27.0], [22.4, 27.0], [22.5, 27.0], [22.6, 27.0], [22.7, 27.0], [22.8, 27.0], [22.9, 28.0], [23.0, 28.0], [23.1, 28.0], [23.2, 28.0], [23.3, 29.0], [23.4, 29.0], [23.5, 29.0], [23.6, 30.0], [23.7, 30.0], [23.8, 30.0], [23.9, 31.0], [24.0, 31.0], [24.1, 31.0], [24.2, 32.0], [24.3, 32.0], [24.4, 32.0], [24.5, 33.0], [24.6, 33.0], [24.7, 33.0], [24.8, 34.0], [24.9, 34.0], [25.0, 34.0], [25.1, 35.0], [25.2, 35.0], [25.3, 36.0], [25.4, 36.0], [25.5, 36.0], [25.6, 37.0], [25.7, 38.0], [25.8, 38.0], [25.9, 39.0], [26.0, 39.0], [26.1, 40.0], [26.2, 40.0], [26.3, 41.0], [26.4, 41.0], [26.5, 42.0], [26.6, 42.0], [26.7, 42.0], [26.8, 42.0], [26.9, 42.0], [27.0, 43.0], [27.1, 43.0], [27.2, 43.0], [27.3, 43.0], [27.4, 43.0], [27.5, 43.0], [27.6, 43.0], [27.7, 43.0], [27.8, 44.0], [27.9, 44.0], [28.0, 44.0], [28.1, 44.0], [28.2, 44.0], [28.3, 44.0], [28.4, 44.0], [28.5, 44.0], [28.6, 44.0], [28.7, 44.0], [28.8, 44.0], [28.9, 44.0], [29.0, 44.0], [29.1, 44.0], [29.2, 44.0], [29.3, 45.0], [29.4, 45.0], [29.5, 45.0], [29.6, 45.0], [29.7, 45.0], [29.8, 45.0], [29.9, 45.0], [30.0, 45.0], [30.1, 45.0], [30.2, 45.0], [30.3, 45.0], [30.4, 45.0], [30.5, 45.0], [30.6, 45.0], [30.7, 45.0], [30.8, 45.0], [30.9, 45.0], [31.0, 45.0], [31.1, 45.0], [31.2, 45.0], [31.3, 45.0], [31.4, 46.0], [31.5, 46.0], [31.6, 46.0], [31.7, 46.0], [31.8, 46.0], [31.9, 46.0], [32.0, 46.0], [32.1, 46.0], [32.2, 46.0], [32.3, 46.0], [32.4, 46.0], [32.5, 46.0], [32.6, 46.0], [32.7, 46.0], [32.8, 46.0], [32.9, 46.0], [33.0, 46.0], [33.1, 46.0], [33.2, 46.0], [33.3, 46.0], [33.4, 46.0], [33.5, 46.0], [33.6, 46.0], [33.7, 46.0], [33.8, 46.0], [33.9, 46.0], [34.0, 46.0], [34.1, 46.0], [34.2, 46.0], [34.3, 47.0], [34.4, 47.0], [34.5, 47.0], [34.6, 47.0], [34.7, 47.0], [34.8, 47.0], [34.9, 47.0], [35.0, 47.0], [35.1, 47.0], [35.2, 47.0], [35.3, 47.0], [35.4, 47.0], [35.5, 47.0], [35.6, 47.0], [35.7, 47.0], [35.8, 47.0], [35.9, 47.0], [36.0, 47.0], [36.1, 47.0], [36.2, 47.0], [36.3, 47.0], [36.4, 47.0], [36.5, 47.0], [36.6, 47.0], [36.7, 47.0], [36.8, 47.0], [36.9, 47.0], [37.0, 47.0], [37.1, 47.0], [37.2, 47.0], [37.3, 47.0], [37.4, 47.0], [37.5, 48.0], [37.6, 48.0], [37.7, 48.0], [37.8, 48.0], [37.9, 48.0], [38.0, 48.0], [38.1, 48.0], [38.2, 48.0], [38.3, 48.0], [38.4, 48.0], [38.5, 48.0], [38.6, 48.0], [38.7, 48.0], [38.8, 48.0], [38.9, 48.0], [39.0, 48.0], [39.1, 48.0], [39.2, 48.0], [39.3, 48.0], [39.4, 48.0], [39.5, 48.0], [39.6, 48.0], [39.7, 48.0], [39.8, 48.0], [39.9, 48.0], [40.0, 48.0], [40.1, 48.0], [40.2, 48.0], [40.3, 48.0], [40.4, 49.0], [40.5, 49.0], [40.6, 49.0], [40.7, 49.0], [40.8, 49.0], [40.9, 49.0], [41.0, 49.0], [41.1, 49.0], [41.2, 49.0], [41.3, 49.0], [41.4, 49.0], [41.5, 49.0], [41.6, 49.0], [41.7, 49.0], [41.8, 49.0], [41.9, 49.0], [42.0, 49.0], [42.1, 49.0], [42.2, 49.0], [42.3, 49.0], [42.4, 49.0], [42.5, 49.0], [42.6, 49.0], [42.7, 49.0], [42.8, 49.0], [42.9, 49.0], [43.0, 50.0], [43.1, 50.0], [43.2, 50.0], [43.3, 50.0], [43.4, 50.0], [43.5, 50.0], [43.6, 50.0], [43.7, 50.0], [43.8, 50.0], [43.9, 50.0], [44.0, 50.0], [44.1, 50.0], [44.2, 50.0], [44.3, 50.0], [44.4, 50.0], [44.5, 50.0], [44.6, 50.0], [44.7, 50.0], [44.8, 50.0], [44.9, 50.0], [45.0, 50.0], [45.1, 50.0], [45.2, 50.0], [45.3, 50.0], [45.4, 51.0], [45.5, 51.0], [45.6, 51.0], [45.7, 51.0], [45.8, 51.0], [45.9, 51.0], [46.0, 51.0], [46.1, 51.0], [46.2, 51.0], [46.3, 51.0], [46.4, 51.0], [46.5, 51.0], [46.6, 51.0], [46.7, 51.0], [46.8, 51.0], [46.9, 51.0], [47.0, 51.0], [47.1, 51.0], [47.2, 51.0], [47.3, 51.0], [47.4, 52.0], [47.5, 52.0], [47.6, 52.0], [47.7, 52.0], [47.8, 52.0], [47.9, 52.0], [48.0, 52.0], [48.1, 52.0], [48.2, 52.0], [48.3, 52.0], [48.4, 52.0], [48.5, 52.0], [48.6, 52.0], [48.7, 52.0], [48.8, 52.0], [48.9, 52.0], [49.0, 53.0], [49.1, 53.0], [49.2, 53.0], [49.3, 53.0], [49.4, 53.0], [49.5, 53.0], [49.6, 53.0], [49.7, 53.0], [49.8, 53.0], [49.9, 53.0], [50.0, 53.0], [50.1, 53.0], [50.2, 53.0], [50.3, 53.0], [50.4, 53.0], [50.5, 54.0], [50.6, 54.0], [50.7, 54.0], [50.8, 54.0], [50.9, 54.0], [51.0, 54.0], [51.1, 54.0], [51.2, 54.0], [51.3, 54.0], [51.4, 54.0], [51.5, 54.0], [51.6, 54.0], [51.7, 55.0], [51.8, 55.0], [51.9, 55.0], [52.0, 55.0], [52.1, 55.0], [52.2, 55.0], [52.3, 55.0], [52.4, 55.0], [52.5, 55.0], [52.6, 55.0], [52.7, 56.0], [52.8, 56.0], [52.9, 56.0], [53.0, 56.0], [53.1, 56.0], [53.2, 56.0], [53.3, 56.0], [53.4, 56.0], [53.5, 56.0], [53.6, 57.0], [53.7, 57.0], [53.8, 57.0], [53.9, 57.0], [54.0, 57.0], [54.1, 57.0], [54.2, 57.0], [54.3, 57.0], [54.4, 58.0], [54.5, 58.0], [54.6, 58.0], [54.7, 58.0], [54.8, 58.0], [54.9, 58.0], [55.0, 58.0], [55.1, 59.0], [55.2, 59.0], [55.3, 59.0], [55.4, 59.0], [55.5, 59.0], [55.6, 59.0], [55.7, 59.0], [55.8, 60.0], [55.9, 60.0], [56.0, 60.0], [56.1, 60.0], [56.2, 60.0], [56.3, 60.0], [56.4, 60.0], [56.5, 61.0], [56.6, 61.0], [56.7, 61.0], [56.8, 61.0], [56.9, 61.0], [57.0, 61.0], [57.1, 62.0], [57.2, 62.0], [57.3, 62.0], [57.4, 62.0], [57.5, 62.0], [57.6, 62.0], [57.7, 62.0], [57.8, 63.0], [57.9, 63.0], [58.0, 63.0], [58.1, 63.0], [58.2, 63.0], [58.3, 64.0], [58.4, 64.0], [58.5, 64.0], [58.6, 64.0], [58.7, 64.0], [58.8, 64.0], [58.9, 65.0], [59.0, 65.0], [59.1, 65.0], [59.2, 65.0], [59.3, 66.0], [59.4, 66.0], [59.5, 66.0], [59.6, 67.0], [59.7, 67.0], [59.8, 67.0], [59.9, 68.0], [60.0, 68.0], [60.1, 69.0], [60.2, 70.0], [60.3, 71.0], [60.4, 72.0], [60.5, 73.0], [60.6, 75.0], [60.7, 77.0], [60.8, 80.0], [60.9, 85.0], [61.0, 91.0], [61.1, 98.0], [61.2, 106.0], [61.3, 113.0], [61.4, 120.0], [61.5, 127.0], [61.6, 136.0], [61.7, 147.0], [61.8, 159.0], [61.9, 177.0], [62.0, 192.0], [62.1, 210.0], [62.2, 228.0], [62.3, 237.0], [62.4, 241.0], [62.5, 244.0], [62.6, 248.0], [62.7, 249.0], [62.8, 250.0], [62.9, 251.0], [63.0, 251.0], [63.1, 252.0], [63.2, 252.0], [63.3, 252.0], [63.4, 253.0], [63.5, 253.0], [63.6, 253.0], [63.7, 253.0], [63.8, 253.0], [63.9, 254.0], [64.0, 254.0], [64.1, 254.0], [64.2, 254.0], [64.3, 254.0], [64.4, 254.0], [64.5, 255.0], [64.6, 255.0], [64.7, 255.0], [64.8, 255.0], [64.9, 255.0], [65.0, 255.0], [65.1, 255.0], [65.2, 256.0], [65.3, 256.0], [65.4, 256.0], [65.5, 256.0], [65.6, 256.0], [65.7, 256.0], [65.8, 257.0], [65.9, 257.0], [66.0, 257.0], [66.1, 257.0], [66.2, 257.0], [66.3, 257.0], [66.4, 257.0], [66.5, 257.0], [66.6, 258.0], [66.7, 258.0], [66.8, 258.0], [66.9, 258.0], [67.0, 258.0], [67.1, 258.0], [67.2, 258.0], [67.3, 258.0], [67.4, 259.0], [67.5, 259.0], [67.6, 259.0], [67.7, 259.0], [67.8, 259.0], [67.9, 259.0], [68.0, 259.0], [68.1, 259.0], [68.2, 259.0], [68.3, 260.0], [68.4, 260.0], [68.5, 260.0], [68.6, 260.0], [68.7, 260.0], [68.8, 260.0], [68.9, 260.0], [69.0, 260.0], [69.1, 261.0], [69.2, 261.0], [69.3, 261.0], [69.4, 261.0], [69.5, 261.0], [69.6, 261.0], [69.7, 261.0], [69.8, 262.0], [69.9, 262.0], [70.0, 262.0], [70.1, 262.0], [70.2, 262.0], [70.3, 262.0], [70.4, 262.0], [70.5, 263.0], [70.6, 263.0], [70.7, 263.0], [70.8, 263.0], [70.9, 263.0], [71.0, 263.0], [71.1, 264.0], [71.2, 264.0], [71.3, 264.0], [71.4, 264.0], [71.5, 264.0], [71.6, 265.0], [71.7, 265.0], [71.8, 265.0], [71.9, 265.0], [72.0, 265.0], [72.1, 266.0], [72.2, 266.0], [72.3, 266.0], [72.4, 267.0], [72.5, 267.0], [72.6, 267.0], [72.7, 268.0], [72.8, 268.0], [72.9, 268.0], [73.0, 269.0], [73.1, 269.0], [73.2, 270.0], [73.3, 271.0], [73.4, 271.0], [73.5, 272.0], [73.6, 272.0], [73.7, 273.0], [73.8, 273.0], [73.9, 274.0], [74.0, 274.0], [74.1, 275.0], [74.2, 276.0], [74.3, 276.0], [74.4, 277.0], [74.5, 277.0], [74.6, 278.0], [74.7, 278.0], [74.8, 279.0], [74.9, 280.0], [75.0, 281.0], [75.1, 282.0], [75.2, 283.0], [75.3, 285.0], [75.4, 288.0], [75.5, 290.0], [75.6, 292.0], [75.7, 292.0], [75.8, 293.0], [75.9, 293.0], [76.0, 294.0], [76.1, 294.0], [76.2, 295.0], [76.3, 295.0], [76.4, 296.0], [76.5, 296.0], [76.6, 296.0], [76.7, 297.0], [76.8, 297.0], [76.9, 297.0], [77.0, 298.0], [77.1, 298.0], [77.2, 299.0], [77.3, 299.0], [77.4, 300.0], [77.5, 300.0], [77.6, 301.0], [77.7, 302.0], [77.8, 303.0], [77.9, 306.0], [78.0, 308.0], [78.1, 310.0], [78.2, 311.0], [78.3, 312.0], [78.4, 313.0], [78.5, 314.0], [78.6, 316.0], [78.7, 318.0], [78.8, 325.0], [78.9, 329.0], [79.0, 330.0], [79.1, 331.0], [79.2, 332.0], [79.3, 333.0], [79.4, 334.0], [79.5, 334.0], [79.6, 335.0], [79.7, 335.0], [79.8, 336.0], [79.9, 336.0], [80.0, 337.0], [80.1, 338.0], [80.2, 338.0], [80.3, 339.0], [80.4, 340.0], [80.5, 340.0], [80.6, 341.0], [80.7, 343.0], [80.8, 344.0], [80.9, 346.0], [81.0, 349.0], [81.1, 351.0], [81.2, 353.0], [81.3, 355.0], [81.4, 359.0], [81.5, 371.0], [81.6, 390.0], [81.7, 409.0], [81.8, 430.0], [81.9, 452.0], [82.0, 479.0], [82.1, 515.0], [82.2, 568.0], [82.3, 655.0], [82.4, 657.0], [82.5, 659.0], [82.6, 660.0], [82.7, 661.0], [82.8, 662.0], [82.9, 663.0], [83.0, 664.0], [83.1, 665.0], [83.2, 666.0], [83.3, 667.0], [83.4, 668.0], [83.5, 668.0], [83.6, 669.0], [83.7, 670.0], [83.8, 670.0], [83.9, 671.0], [84.0, 671.0], [84.1, 672.0], [84.2, 673.0], [84.3, 673.0], [84.4, 674.0], [84.5, 674.0], [84.6, 675.0], [84.7, 675.0], [84.8, 675.0], [84.9, 676.0], [85.0, 677.0], [85.1, 677.0], [85.2, 678.0], [85.3, 678.0], [85.4, 679.0], [85.5, 680.0], [85.6, 680.0], [85.7, 681.0], [85.8, 681.0], [85.9, 682.0], [86.0, 683.0], [86.1, 685.0], [86.2, 687.0], [86.3, 690.0], [86.4, 693.0], [86.5, 696.0], [86.6, 699.0], [86.7, 701.0], [86.8, 703.0], [86.9, 704.0], [87.0, 706.0], [87.1, 708.0], [87.2, 709.0], [87.3, 710.0], [87.4, 711.0], [87.5, 712.0], [87.6, 713.0], [87.7, 714.0], [87.8, 715.0], [87.9, 717.0], [88.0, 720.0], [88.1, 731.0], [88.2, 735.0], [88.3, 737.0], [88.4, 739.0], [88.5, 741.0], [88.6, 743.0], [88.7, 747.0], [88.8, 751.0], [88.9, 754.0], [89.0, 756.0], [89.1, 760.0], [89.2, 772.0], [89.3, 780.0], [89.4, 783.0], [89.5, 786.0], [89.6, 788.0], [89.7, 789.0], [89.8, 791.0], [89.9, 793.0], [90.0, 795.0], [90.1, 797.0], [90.2, 799.0], [90.3, 800.0], [90.4, 802.0], [90.5, 803.0], [90.6, 806.0], [90.7, 809.0], [90.8, 815.0], [90.9, 822.0], [91.0, 829.0], [91.1, 863.0], [91.2, 1063.0], [91.3, 1088.0], [91.4, 1202.0], [91.5, 1450.0], [91.6, 1476.0], [91.7, 1478.0], [91.8, 1480.0], [91.9, 1482.0], [92.0, 1485.0], [92.1, 1489.0], [92.2, 1501.0], [92.3, 1503.0], [92.4, 1505.0], [92.5, 1506.0], [92.6, 1508.0], [92.7, 1509.0], [92.8, 1511.0], [92.9, 1512.0], [93.0, 1514.0], [93.1, 1516.0], [93.2, 1525.0], [93.3, 1539.0], [93.4, 1542.0], [93.5, 1544.0], [93.6, 1546.0], [93.7, 1548.0], [93.8, 1551.0], [93.9, 1555.0], [94.0, 1565.0], [94.1, 1583.0], [94.2, 1587.0], [94.3, 1592.0], [94.4, 1598.0], [94.5, 1602.0], [94.6, 1605.0], [94.7, 1609.0], [94.8, 1623.0], [94.9, 1627.0], [95.0, 1630.0], [95.1, 1632.0], [95.2, 1634.0], [95.3, 1637.0], [95.4, 1643.0], [95.5, 1664.0], [95.6, 1675.0], [95.7, 1758.0], [95.8, 2128.0], [95.9, 3113.0], [96.0, 3118.0], [96.1, 3156.0], [96.2, 3172.0], [96.3, 3176.0], [96.4, 3179.0], [96.5, 3183.0], [96.6, 3200.0], [96.7, 3212.0], [96.8, 3223.0], [96.9, 3238.0], [97.0, 3242.0], [97.1, 3248.0], [97.2, 3256.0], [97.3, 3291.0], [97.4, 3297.0], [97.5, 3301.0], [97.6, 3305.0], [97.7, 3325.0], [97.8, 3373.0], [97.9, 3608.0], [98.0, 6385.0], [98.1, 6400.0], [98.2, 6508.0], [98.3, 6512.0], [98.4, 6518.0], [98.5, 6546.0], [98.6, 6627.0], [98.7, 6636.0], [98.8, 6645.0], [98.9, 6738.0], [99.0, 6998.0], [99.1, 12947.0], [99.2, 13174.0], [99.3, 13216.0], [99.4, 13309.0], [99.5, 13559.0], [99.6, 26124.0], [99.7, 26634.0], [99.8, 30009.0], [99.9, 33255.0], [100.0, 84431.0]], "isOverall": false, "label": "home-13", "isController": true}, {"data": [[0.0, 6.0], [0.1, 7.0], [0.2, 8.0], [0.3, 8.0], [0.4, 8.0], [0.5, 8.0], [0.6, 8.0], [0.7, 8.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 8.0], [1.7, 8.0], [1.8, 8.0], [1.9, 8.0], [2.0, 8.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 9.0], [2.8, 9.0], [2.9, 9.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 9.0], [3.4, 9.0], [3.5, 9.0], [3.6, 9.0], [3.7, 9.0], [3.8, 9.0], [3.9, 9.0], [4.0, 9.0], [4.1, 9.0], [4.2, 9.0], [4.3, 9.0], [4.4, 9.0], [4.5, 9.0], [4.6, 9.0], [4.7, 9.0], [4.8, 9.0], [4.9, 9.0], [5.0, 9.0], [5.1, 9.0], [5.2, 9.0], [5.3, 9.0], [5.4, 9.0], [5.5, 9.0], [5.6, 9.0], [5.7, 9.0], [5.8, 9.0], [5.9, 9.0], [6.0, 9.0], [6.1, 9.0], [6.2, 9.0], [6.3, 9.0], [6.4, 9.0], [6.5, 9.0], [6.6, 9.0], [6.7, 9.0], [6.8, 9.0], [6.9, 9.0], [7.0, 9.0], [7.1, 9.0], [7.2, 9.0], [7.3, 9.0], [7.4, 9.0], [7.5, 9.0], [7.6, 9.0], [7.7, 9.0], [7.8, 9.0], [7.9, 9.0], [8.0, 9.0], [8.1, 9.0], [8.2, 9.0], [8.3, 9.0], [8.4, 9.0], [8.5, 9.0], [8.6, 9.0], [8.7, 9.0], [8.8, 9.0], [8.9, 9.0], [9.0, 9.0], [9.1, 9.0], [9.2, 9.0], [9.3, 9.0], [9.4, 9.0], [9.5, 9.0], [9.6, 9.0], [9.7, 9.0], [9.8, 9.0], [9.9, 9.0], [10.0, 10.0], [10.1, 10.0], [10.2, 10.0], [10.3, 10.0], [10.4, 10.0], [10.5, 10.0], [10.6, 10.0], [10.7, 10.0], [10.8, 10.0], [10.9, 10.0], [11.0, 10.0], [11.1, 10.0], [11.2, 10.0], [11.3, 10.0], [11.4, 10.0], [11.5, 10.0], [11.6, 10.0], [11.7, 10.0], [11.8, 10.0], [11.9, 10.0], [12.0, 10.0], [12.1, 10.0], [12.2, 10.0], [12.3, 10.0], [12.4, 10.0], [12.5, 10.0], [12.6, 10.0], [12.7, 10.0], [12.8, 10.0], [12.9, 10.0], [13.0, 10.0], [13.1, 10.0], [13.2, 10.0], [13.3, 10.0], [13.4, 10.0], [13.5, 10.0], [13.6, 10.0], [13.7, 10.0], [13.8, 10.0], [13.9, 10.0], [14.0, 10.0], [14.1, 10.0], [14.2, 10.0], [14.3, 10.0], [14.4, 10.0], [14.5, 10.0], [14.6, 10.0], [14.7, 10.0], [14.8, 10.0], [14.9, 10.0], [15.0, 10.0], [15.1, 10.0], [15.2, 10.0], [15.3, 10.0], [15.4, 10.0], [15.5, 10.0], [15.6, 10.0], [15.7, 10.0], [15.8, 10.0], [15.9, 10.0], [16.0, 10.0], [16.1, 10.0], [16.2, 10.0], [16.3, 10.0], [16.4, 10.0], [16.5, 10.0], [16.6, 10.0], [16.7, 10.0], [16.8, 10.0], [16.9, 10.0], [17.0, 10.0], [17.1, 10.0], [17.2, 10.0], [17.3, 10.0], [17.4, 10.0], [17.5, 10.0], [17.6, 10.0], [17.7, 10.0], [17.8, 10.0], [17.9, 10.0], [18.0, 10.0], [18.1, 10.0], [18.2, 10.0], [18.3, 10.0], [18.4, 10.0], [18.5, 10.0], [18.6, 10.0], [18.7, 10.0], [18.8, 10.0], [18.9, 10.0], [19.0, 10.0], [19.1, 10.0], [19.2, 10.0], [19.3, 10.0], [19.4, 10.0], [19.5, 10.0], [19.6, 10.0], [19.7, 10.0], [19.8, 10.0], [19.9, 10.0], [20.0, 10.0], [20.1, 10.0], [20.2, 10.0], [20.3, 10.0], [20.4, 10.0], [20.5, 10.0], [20.6, 10.0], [20.7, 10.0], [20.8, 10.0], [20.9, 10.0], [21.0, 10.0], [21.1, 10.0], [21.2, 10.0], [21.3, 10.0], [21.4, 10.0], [21.5, 10.0], [21.6, 10.0], [21.7, 10.0], [21.8, 10.0], [21.9, 10.0], [22.0, 10.0], [22.1, 11.0], [22.2, 11.0], [22.3, 11.0], [22.4, 11.0], [22.5, 11.0], [22.6, 11.0], [22.7, 11.0], [22.8, 11.0], [22.9, 11.0], [23.0, 11.0], [23.1, 11.0], [23.2, 11.0], [23.3, 11.0], [23.4, 11.0], [23.5, 11.0], [23.6, 11.0], [23.7, 11.0], [23.8, 11.0], [23.9, 11.0], [24.0, 11.0], [24.1, 11.0], [24.2, 11.0], [24.3, 11.0], [24.4, 11.0], [24.5, 11.0], [24.6, 11.0], [24.7, 11.0], [24.8, 11.0], [24.9, 11.0], [25.0, 11.0], [25.1, 11.0], [25.2, 11.0], [25.3, 11.0], [25.4, 11.0], [25.5, 11.0], [25.6, 11.0], [25.7, 11.0], [25.8, 11.0], [25.9, 11.0], [26.0, 11.0], [26.1, 11.0], [26.2, 11.0], [26.3, 11.0], [26.4, 11.0], [26.5, 11.0], [26.6, 11.0], [26.7, 11.0], [26.8, 11.0], [26.9, 11.0], [27.0, 11.0], [27.1, 11.0], [27.2, 11.0], [27.3, 11.0], [27.4, 11.0], [27.5, 11.0], [27.6, 11.0], [27.7, 11.0], [27.8, 11.0], [27.9, 11.0], [28.0, 11.0], [28.1, 11.0], [28.2, 11.0], [28.3, 11.0], [28.4, 11.0], [28.5, 11.0], [28.6, 11.0], [28.7, 11.0], [28.8, 11.0], [28.9, 11.0], [29.0, 11.0], [29.1, 11.0], [29.2, 11.0], [29.3, 11.0], [29.4, 11.0], [29.5, 11.0], [29.6, 11.0], [29.7, 11.0], [29.8, 11.0], [29.9, 11.0], [30.0, 11.0], [30.1, 11.0], [30.2, 11.0], [30.3, 11.0], [30.4, 11.0], [30.5, 11.0], [30.6, 11.0], [30.7, 11.0], [30.8, 11.0], [30.9, 11.0], [31.0, 11.0], [31.1, 11.0], [31.2, 11.0], [31.3, 11.0], [31.4, 11.0], [31.5, 11.0], [31.6, 11.0], [31.7, 12.0], [31.8, 12.0], [31.9, 12.0], [32.0, 12.0], [32.1, 12.0], [32.2, 12.0], [32.3, 12.0], [32.4, 12.0], [32.5, 12.0], [32.6, 12.0], [32.7, 12.0], [32.8, 12.0], [32.9, 12.0], [33.0, 12.0], [33.1, 12.0], [33.2, 12.0], [33.3, 12.0], [33.4, 12.0], [33.5, 12.0], [33.6, 12.0], [33.7, 12.0], [33.8, 12.0], [33.9, 12.0], [34.0, 12.0], [34.1, 12.0], [34.2, 12.0], [34.3, 12.0], [34.4, 12.0], [34.5, 12.0], [34.6, 12.0], [34.7, 12.0], [34.8, 12.0], [34.9, 12.0], [35.0, 12.0], [35.1, 12.0], [35.2, 12.0], [35.3, 12.0], [35.4, 12.0], [35.5, 12.0], [35.6, 12.0], [35.7, 12.0], [35.8, 12.0], [35.9, 12.0], [36.0, 12.0], [36.1, 12.0], [36.2, 12.0], [36.3, 12.0], [36.4, 12.0], [36.5, 12.0], [36.6, 12.0], [36.7, 12.0], [36.8, 12.0], [36.9, 12.0], [37.0, 13.0], [37.1, 13.0], [37.2, 13.0], [37.3, 13.0], [37.4, 13.0], [37.5, 13.0], [37.6, 13.0], [37.7, 13.0], [37.8, 13.0], [37.9, 13.0], [38.0, 13.0], [38.1, 13.0], [38.2, 13.0], [38.3, 13.0], [38.4, 13.0], [38.5, 13.0], [38.6, 13.0], [38.7, 13.0], [38.8, 13.0], [38.9, 13.0], [39.0, 13.0], [39.1, 13.0], [39.2, 13.0], [39.3, 13.0], [39.4, 13.0], [39.5, 13.0], [39.6, 13.0], [39.7, 13.0], [39.8, 13.0], [39.9, 14.0], [40.0, 14.0], [40.1, 14.0], [40.2, 14.0], [40.3, 14.0], [40.4, 14.0], [40.5, 14.0], [40.6, 14.0], [40.7, 14.0], [40.8, 14.0], [40.9, 14.0], [41.0, 14.0], [41.1, 14.0], [41.2, 14.0], [41.3, 14.0], [41.4, 14.0], [41.5, 14.0], [41.6, 14.0], [41.7, 15.0], [41.8, 15.0], [41.9, 15.0], [42.0, 15.0], [42.1, 15.0], [42.2, 15.0], [42.3, 15.0], [42.4, 15.0], [42.5, 15.0], [42.6, 15.0], [42.7, 15.0], [42.8, 16.0], [42.9, 16.0], [43.0, 16.0], [43.1, 16.0], [43.2, 16.0], [43.3, 16.0], [43.4, 16.0], [43.5, 16.0], [43.6, 16.0], [43.7, 16.0], [43.8, 17.0], [43.9, 17.0], [44.0, 17.0], [44.1, 17.0], [44.2, 17.0], [44.3, 17.0], [44.4, 17.0], [44.5, 17.0], [44.6, 17.0], [44.7, 17.0], [44.8, 17.0], [44.9, 17.0], [45.0, 17.0], [45.1, 17.0], [45.2, 17.0], [45.3, 17.0], [45.4, 18.0], [45.5, 18.0], [45.6, 18.0], [45.7, 18.0], [45.8, 18.0], [45.9, 18.0], [46.0, 18.0], [46.1, 18.0], [46.2, 18.0], [46.3, 18.0], [46.4, 18.0], [46.5, 18.0], [46.6, 18.0], [46.7, 18.0], [46.8, 18.0], [46.9, 18.0], [47.0, 18.0], [47.1, 18.0], [47.2, 18.0], [47.3, 18.0], [47.4, 18.0], [47.5, 18.0], [47.6, 18.0], [47.7, 18.0], [47.8, 18.0], [47.9, 18.0], [48.0, 18.0], [48.1, 18.0], [48.2, 18.0], [48.3, 18.0], [48.4, 18.0], [48.5, 19.0], [48.6, 19.0], [48.7, 19.0], [48.8, 19.0], [48.9, 19.0], [49.0, 19.0], [49.1, 19.0], [49.2, 19.0], [49.3, 19.0], [49.4, 19.0], [49.5, 19.0], [49.6, 19.0], [49.7, 19.0], [49.8, 19.0], [49.9, 19.0], [50.0, 19.0], [50.1, 19.0], [50.2, 19.0], [50.3, 19.0], [50.4, 19.0], [50.5, 19.0], [50.6, 19.0], [50.7, 19.0], [50.8, 19.0], [50.9, 19.0], [51.0, 19.0], [51.1, 19.0], [51.2, 19.0], [51.3, 19.0], [51.4, 19.0], [51.5, 19.0], [51.6, 19.0], [51.7, 19.0], [51.8, 19.0], [51.9, 19.0], [52.0, 19.0], [52.1, 19.0], [52.2, 19.0], [52.3, 19.0], [52.4, 19.0], [52.5, 19.0], [52.6, 19.0], [52.7, 19.0], [52.8, 19.0], [52.9, 19.0], [53.0, 19.0], [53.1, 19.0], [53.2, 19.0], [53.3, 19.0], [53.4, 20.0], [53.5, 20.0], [53.6, 20.0], [53.7, 20.0], [53.8, 20.0], [53.9, 20.0], [54.0, 20.0], [54.1, 20.0], [54.2, 20.0], [54.3, 20.0], [54.4, 20.0], [54.5, 20.0], [54.6, 20.0], [54.7, 20.0], [54.8, 20.0], [54.9, 20.0], [55.0, 20.0], [55.1, 20.0], [55.2, 20.0], [55.3, 20.0], [55.4, 20.0], [55.5, 20.0], [55.6, 20.0], [55.7, 20.0], [55.8, 20.0], [55.9, 20.0], [56.0, 20.0], [56.1, 20.0], [56.2, 20.0], [56.3, 20.0], [56.4, 20.0], [56.5, 20.0], [56.6, 20.0], [56.7, 20.0], [56.8, 20.0], [56.9, 20.0], [57.0, 20.0], [57.1, 20.0], [57.2, 20.0], [57.3, 20.0], [57.4, 20.0], [57.5, 20.0], [57.6, 20.0], [57.7, 20.0], [57.8, 20.0], [57.9, 20.0], [58.0, 20.0], [58.1, 20.0], [58.2, 20.0], [58.3, 20.0], [58.4, 20.0], [58.5, 20.0], [58.6, 20.0], [58.7, 20.0], [58.8, 20.0], [58.9, 20.0], [59.0, 20.0], [59.1, 20.0], [59.2, 20.0], [59.3, 20.0], [59.4, 20.0], [59.5, 20.0], [59.6, 20.0], [59.7, 20.0], [59.8, 21.0], [59.9, 21.0], [60.0, 21.0], [60.1, 21.0], [60.2, 21.0], [60.3, 21.0], [60.4, 21.0], [60.5, 21.0], [60.6, 21.0], [60.7, 21.0], [60.8, 21.0], [60.9, 21.0], [61.0, 21.0], [61.1, 21.0], [61.2, 21.0], [61.3, 21.0], [61.4, 21.0], [61.5, 21.0], [61.6, 21.0], [61.7, 21.0], [61.8, 21.0], [61.9, 21.0], [62.0, 21.0], [62.1, 21.0], [62.2, 21.0], [62.3, 21.0], [62.4, 21.0], [62.5, 21.0], [62.6, 21.0], [62.7, 21.0], [62.8, 21.0], [62.9, 21.0], [63.0, 21.0], [63.1, 21.0], [63.2, 21.0], [63.3, 21.0], [63.4, 21.0], [63.5, 21.0], [63.6, 21.0], [63.7, 21.0], [63.8, 21.0], [63.9, 21.0], [64.0, 21.0], [64.1, 21.0], [64.2, 21.0], [64.3, 21.0], [64.4, 21.0], [64.5, 21.0], [64.6, 21.0], [64.7, 21.0], [64.8, 21.0], [64.9, 21.0], [65.0, 21.0], [65.1, 21.0], [65.2, 21.0], [65.3, 21.0], [65.4, 21.0], [65.5, 21.0], [65.6, 21.0], [65.7, 21.0], [65.8, 21.0], [65.9, 21.0], [66.0, 21.0], [66.1, 21.0], [66.2, 21.0], [66.3, 21.0], [66.4, 21.0], [66.5, 21.0], [66.6, 21.0], [66.7, 21.0], [66.8, 22.0], [66.9, 22.0], [67.0, 22.0], [67.1, 22.0], [67.2, 22.0], [67.3, 22.0], [67.4, 22.0], [67.5, 22.0], [67.6, 22.0], [67.7, 22.0], [67.8, 22.0], [67.9, 22.0], [68.0, 22.0], [68.1, 22.0], [68.2, 22.0], [68.3, 22.0], [68.4, 22.0], [68.5, 22.0], [68.6, 22.0], [68.7, 22.0], [68.8, 22.0], [68.9, 22.0], [69.0, 22.0], [69.1, 22.0], [69.2, 22.0], [69.3, 22.0], [69.4, 22.0], [69.5, 22.0], [69.6, 22.0], [69.7, 22.0], [69.8, 22.0], [69.9, 22.0], [70.0, 22.0], [70.1, 22.0], [70.2, 22.0], [70.3, 22.0], [70.4, 22.0], [70.5, 22.0], [70.6, 22.0], [70.7, 22.0], [70.8, 22.0], [70.9, 22.0], [71.0, 22.0], [71.1, 22.0], [71.2, 22.0], [71.3, 22.0], [71.4, 22.0], [71.5, 22.0], [71.6, 22.0], [71.7, 22.0], [71.8, 22.0], [71.9, 22.0], [72.0, 22.0], [72.1, 22.0], [72.2, 22.0], [72.3, 22.0], [72.4, 22.0], [72.5, 22.0], [72.6, 22.0], [72.7, 22.0], [72.8, 22.0], [72.9, 23.0], [73.0, 23.0], [73.1, 23.0], [73.2, 23.0], [73.3, 23.0], [73.4, 23.0], [73.5, 23.0], [73.6, 23.0], [73.7, 23.0], [73.8, 23.0], [73.9, 23.0], [74.0, 23.0], [74.1, 23.0], [74.2, 23.0], [74.3, 23.0], [74.4, 23.0], [74.5, 23.0], [74.6, 23.0], [74.7, 23.0], [74.8, 23.0], [74.9, 23.0], [75.0, 23.0], [75.1, 23.0], [75.2, 23.0], [75.3, 23.0], [75.4, 23.0], [75.5, 23.0], [75.6, 23.0], [75.7, 23.0], [75.8, 23.0], [75.9, 23.0], [76.0, 23.0], [76.1, 23.0], [76.2, 23.0], [76.3, 23.0], [76.4, 23.0], [76.5, 23.0], [76.6, 23.0], [76.7, 23.0], [76.8, 23.0], [76.9, 23.0], [77.0, 23.0], [77.1, 23.0], [77.2, 23.0], [77.3, 23.0], [77.4, 23.0], [77.5, 23.0], [77.6, 23.0], [77.7, 23.0], [77.8, 24.0], [77.9, 24.0], [78.0, 24.0], [78.1, 24.0], [78.2, 24.0], [78.3, 24.0], [78.4, 24.0], [78.5, 24.0], [78.6, 24.0], [78.7, 24.0], [78.8, 24.0], [78.9, 24.0], [79.0, 24.0], [79.1, 24.0], [79.2, 24.0], [79.3, 24.0], [79.4, 24.0], [79.5, 24.0], [79.6, 24.0], [79.7, 24.0], [79.8, 24.0], [79.9, 24.0], [80.0, 24.0], [80.1, 24.0], [80.2, 24.0], [80.3, 24.0], [80.4, 24.0], [80.5, 24.0], [80.6, 24.0], [80.7, 24.0], [80.8, 24.0], [80.9, 24.0], [81.0, 24.0], [81.1, 24.0], [81.2, 24.0], [81.3, 25.0], [81.4, 25.0], [81.5, 25.0], [81.6, 25.0], [81.7, 25.0], [81.8, 25.0], [81.9, 25.0], [82.0, 25.0], [82.1, 25.0], [82.2, 25.0], [82.3, 25.0], [82.4, 25.0], [82.5, 25.0], [82.6, 25.0], [82.7, 25.0], [82.8, 25.0], [82.9, 25.0], [83.0, 25.0], [83.1, 25.0], [83.2, 25.0], [83.3, 25.0], [83.4, 25.0], [83.5, 25.0], [83.6, 25.0], [83.7, 25.0], [83.8, 26.0], [83.9, 26.0], [84.0, 26.0], [84.1, 26.0], [84.2, 26.0], [84.3, 26.0], [84.4, 26.0], [84.5, 26.0], [84.6, 26.0], [84.7, 26.0], [84.8, 26.0], [84.9, 26.0], [85.0, 26.0], [85.1, 26.0], [85.2, 26.0], [85.3, 26.0], [85.4, 26.0], [85.5, 27.0], [85.6, 27.0], [85.7, 27.0], [85.8, 27.0], [85.9, 27.0], [86.0, 27.0], [86.1, 27.0], [86.2, 27.0], [86.3, 27.0], [86.4, 27.0], [86.5, 27.0], [86.6, 27.0], [86.7, 27.0], [86.8, 28.0], [86.9, 28.0], [87.0, 28.0], [87.1, 28.0], [87.2, 28.0], [87.3, 28.0], [87.4, 28.0], [87.5, 28.0], [87.6, 28.0], [87.7, 28.0], [87.8, 29.0], [87.9, 29.0], [88.0, 29.0], [88.1, 29.0], [88.2, 29.0], [88.3, 29.0], [88.4, 29.0], [88.5, 29.0], [88.6, 30.0], [88.7, 30.0], [88.8, 30.0], [88.9, 30.0], [89.0, 30.0], [89.1, 30.0], [89.2, 30.0], [89.3, 31.0], [89.4, 31.0], [89.5, 31.0], [89.6, 31.0], [89.7, 31.0], [89.8, 31.0], [89.9, 32.0], [90.0, 32.0], [90.1, 32.0], [90.2, 32.0], [90.3, 32.0], [90.4, 33.0], [90.5, 33.0], [90.6, 33.0], [90.7, 33.0], [90.8, 33.0], [90.9, 34.0], [91.0, 34.0], [91.1, 34.0], [91.2, 35.0], [91.3, 35.0], [91.4, 35.0], [91.5, 36.0], [91.6, 36.0], [91.7, 37.0], [91.8, 37.0], [91.9, 38.0], [92.0, 38.0], [92.1, 39.0], [92.2, 40.0], [92.3, 41.0], [92.4, 42.0], [92.5, 43.0], [92.6, 44.0], [92.7, 45.0], [92.8, 46.0], [92.9, 48.0], [93.0, 50.0], [93.1, 52.0], [93.2, 55.0], [93.3, 58.0], [93.4, 61.0], [93.5, 64.0], [93.6, 69.0], [93.7, 74.0], [93.8, 79.0], [93.9, 85.0], [94.0, 92.0], [94.1, 98.0], [94.2, 106.0], [94.3, 114.0], [94.4, 122.0], [94.5, 130.0], [94.6, 138.0], [94.7, 149.0], [94.8, 162.0], [94.9, 178.0], [95.0, 193.0], [95.1, 206.0], [95.2, 212.0], [95.3, 213.0], [95.4, 215.0], [95.5, 218.0], [95.6, 220.0], [95.7, 221.0], [95.8, 222.0], [95.9, 223.0], [96.0, 224.0], [96.1, 224.0], [96.2, 225.0], [96.3, 226.0], [96.4, 227.0], [96.5, 227.0], [96.6, 228.0], [96.7, 229.0], [96.8, 230.0], [96.9, 231.0], [97.0, 232.0], [97.1, 233.0], [97.2, 234.0], [97.3, 235.0], [97.4, 236.0], [97.5, 236.0], [97.6, 237.0], [97.7, 238.0], [97.8, 239.0], [97.9, 240.0], [98.0, 241.0], [98.1, 242.0], [98.2, 243.0], [98.3, 244.0], [98.4, 246.0], [98.5, 248.0], [98.6, 252.0], [98.7, 260.0], [98.8, 272.0], [98.9, 294.0], [99.0, 336.0], [99.1, 388.0], [99.2, 425.0], [99.3, 441.0], [99.4, 451.0], [99.5, 459.0], [99.6, 474.0], [99.7, 518.0], [99.8, 633.0], [99.9, 896.0], [100.0, 4240.0]], "isOverall": false, "label": "login-23", "isController": false}, {"data": [[0.0, 7.0], [0.1, 7.0], [0.2, 8.0], [0.3, 8.0], [0.4, 8.0], [0.5, 8.0], [0.6, 8.0], [0.7, 8.0], [0.8, 8.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 8.0], [1.7, 8.0], [1.8, 8.0], [1.9, 8.0], [2.0, 8.0], [2.1, 8.0], [2.2, 8.0], [2.3, 8.0], [2.4, 8.0], [2.5, 8.0], [2.6, 8.0], [2.7, 8.0], [2.8, 9.0], [2.9, 9.0], [3.0, 9.0], [3.1, 9.0], [3.2, 9.0], [3.3, 9.0], [3.4, 9.0], [3.5, 9.0], [3.6, 9.0], [3.7, 9.0], [3.8, 9.0], [3.9, 9.0], [4.0, 9.0], [4.1, 9.0], [4.2, 9.0], [4.3, 9.0], [4.4, 9.0], [4.5, 9.0], [4.6, 9.0], [4.7, 9.0], [4.8, 9.0], [4.9, 9.0], [5.0, 9.0], [5.1, 9.0], [5.2, 9.0], [5.3, 9.0], [5.4, 9.0], [5.5, 9.0], [5.6, 9.0], [5.7, 9.0], [5.8, 9.0], [5.9, 9.0], [6.0, 9.0], [6.1, 9.0], [6.2, 9.0], [6.3, 9.0], [6.4, 9.0], [6.5, 9.0], [6.6, 9.0], [6.7, 9.0], [6.8, 9.0], [6.9, 9.0], [7.0, 9.0], [7.1, 9.0], [7.2, 9.0], [7.3, 9.0], [7.4, 9.0], [7.5, 9.0], [7.6, 9.0], [7.7, 9.0], [7.8, 9.0], [7.9, 9.0], [8.0, 9.0], [8.1, 9.0], [8.2, 9.0], [8.3, 9.0], [8.4, 9.0], [8.5, 9.0], [8.6, 9.0], [8.7, 9.0], [8.8, 9.0], [8.9, 9.0], [9.0, 9.0], [9.1, 9.0], [9.2, 9.0], [9.3, 9.0], [9.4, 9.0], [9.5, 9.0], [9.6, 9.0], [9.7, 9.0], [9.8, 9.0], [9.9, 9.0], [10.0, 9.0], [10.1, 9.0], [10.2, 9.0], [10.3, 9.0], [10.4, 9.0], [10.5, 9.0], [10.6, 9.0], [10.7, 9.0], [10.8, 9.0], [10.9, 9.0], [11.0, 9.0], [11.1, 9.0], [11.2, 9.0], [11.3, 9.0], [11.4, 9.0], [11.5, 9.0], [11.6, 9.0], [11.7, 9.0], [11.8, 9.0], [11.9, 9.0], [12.0, 9.0], [12.1, 9.0], [12.2, 9.0], [12.3, 9.0], [12.4, 9.0], [12.5, 9.0], [12.6, 9.0], [12.7, 9.0], [12.8, 9.0], [12.9, 9.0], [13.0, 9.0], [13.1, 9.0], [13.2, 9.0], [13.3, 9.0], [13.4, 9.0], [13.5, 9.0], [13.6, 9.0], [13.7, 9.0], [13.8, 9.0], [13.9, 9.0], [14.0, 9.0], [14.1, 9.0], [14.2, 9.0], [14.3, 9.0], [14.4, 9.0], [14.5, 9.0], [14.6, 9.0], [14.7, 9.0], [14.8, 9.0], [14.9, 9.0], [15.0, 9.0], [15.1, 9.0], [15.2, 9.0], [15.3, 9.0], [15.4, 9.0], [15.5, 9.0], [15.6, 9.0], [15.7, 9.0], [15.8, 10.0], [15.9, 10.0], [16.0, 10.0], [16.1, 10.0], [16.2, 10.0], [16.3, 10.0], [16.4, 10.0], [16.5, 10.0], [16.6, 10.0], [16.7, 10.0], [16.8, 10.0], [16.9, 10.0], [17.0, 10.0], [17.1, 10.0], [17.2, 10.0], [17.3, 10.0], [17.4, 10.0], [17.5, 10.0], [17.6, 10.0], [17.7, 10.0], [17.8, 10.0], [17.9, 10.0], [18.0, 10.0], [18.1, 10.0], [18.2, 10.0], [18.3, 10.0], [18.4, 10.0], [18.5, 10.0], [18.6, 10.0], [18.7, 10.0], [18.8, 10.0], [18.9, 10.0], [19.0, 10.0], [19.1, 10.0], [19.2, 10.0], [19.3, 10.0], [19.4, 10.0], [19.5, 10.0], [19.6, 10.0], [19.7, 10.0], [19.8, 10.0], [19.9, 10.0], [20.0, 10.0], [20.1, 10.0], [20.2, 10.0], [20.3, 10.0], [20.4, 10.0], [20.5, 10.0], [20.6, 10.0], [20.7, 10.0], [20.8, 10.0], [20.9, 10.0], [21.0, 10.0], [21.1, 10.0], [21.2, 10.0], [21.3, 10.0], [21.4, 10.0], [21.5, 10.0], [21.6, 10.0], [21.7, 10.0], [21.8, 10.0], [21.9, 10.0], [22.0, 10.0], [22.1, 10.0], [22.2, 10.0], [22.3, 10.0], [22.4, 10.0], [22.5, 10.0], [22.6, 10.0], [22.7, 10.0], [22.8, 10.0], [22.9, 10.0], [23.0, 10.0], [23.1, 10.0], [23.2, 10.0], [23.3, 10.0], [23.4, 10.0], [23.5, 10.0], [23.6, 10.0], [23.7, 10.0], [23.8, 10.0], [23.9, 10.0], [24.0, 10.0], [24.1, 10.0], [24.2, 10.0], [24.3, 10.0], [24.4, 10.0], [24.5, 10.0], [24.6, 10.0], [24.7, 10.0], [24.8, 10.0], [24.9, 10.0], [25.0, 10.0], [25.1, 10.0], [25.2, 10.0], [25.3, 10.0], [25.4, 10.0], [25.5, 10.0], [25.6, 10.0], [25.7, 10.0], [25.8, 10.0], [25.9, 10.0], [26.0, 10.0], [26.1, 10.0], [26.2, 10.0], [26.3, 10.0], [26.4, 10.0], [26.5, 10.0], [26.6, 10.0], [26.7, 10.0], [26.8, 10.0], [26.9, 10.0], [27.0, 10.0], [27.1, 10.0], [27.2, 10.0], [27.3, 10.0], [27.4, 10.0], [27.5, 10.0], [27.6, 10.0], [27.7, 10.0], [27.8, 10.0], [27.9, 10.0], [28.0, 10.0], [28.1, 10.0], [28.2, 10.0], [28.3, 10.0], [28.4, 10.0], [28.5, 10.0], [28.6, 10.0], [28.7, 10.0], [28.8, 10.0], [28.9, 10.0], [29.0, 10.0], [29.1, 10.0], [29.2, 10.0], [29.3, 10.0], [29.4, 10.0], [29.5, 10.0], [29.6, 10.0], [29.7, 10.0], [29.8, 10.0], [29.9, 10.0], [30.0, 10.0], [30.1, 10.0], [30.2, 10.0], [30.3, 10.0], [30.4, 10.0], [30.5, 10.0], [30.6, 10.0], [30.7, 10.0], [30.8, 10.0], [30.9, 10.0], [31.0, 10.0], [31.1, 10.0], [31.2, 10.0], [31.3, 10.0], [31.4, 10.0], [31.5, 10.0], [31.6, 10.0], [31.7, 10.0], [31.8, 10.0], [31.9, 10.0], [32.0, 10.0], [32.1, 10.0], [32.2, 10.0], [32.3, 10.0], [32.4, 10.0], [32.5, 10.0], [32.6, 10.0], [32.7, 10.0], [32.8, 10.0], [32.9, 10.0], [33.0, 10.0], [33.1, 10.0], [33.2, 10.0], [33.3, 10.0], [33.4, 10.0], [33.5, 10.0], [33.6, 10.0], [33.7, 10.0], [33.8, 10.0], [33.9, 10.0], [34.0, 10.0], [34.1, 10.0], [34.2, 10.0], [34.3, 10.0], [34.4, 10.0], [34.5, 10.0], [34.6, 10.0], [34.7, 10.0], [34.8, 10.0], [34.9, 10.0], [35.0, 10.0], [35.1, 10.0], [35.2, 10.0], [35.3, 10.0], [35.4, 10.0], [35.5, 10.0], [35.6, 10.0], [35.7, 10.0], [35.8, 10.0], [35.9, 10.0], [36.0, 10.0], [36.1, 10.0], [36.2, 10.0], [36.3, 10.0], [36.4, 10.0], [36.5, 10.0], [36.6, 10.0], [36.7, 10.0], [36.8, 10.0], [36.9, 10.0], [37.0, 10.0], [37.1, 10.0], [37.2, 10.0], [37.3, 10.0], [37.4, 10.0], [37.5, 10.0], [37.6, 10.0], [37.7, 10.0], [37.8, 10.0], [37.9, 10.0], [38.0, 10.0], [38.1, 10.0], [38.2, 10.0], [38.3, 10.0], [38.4, 10.0], [38.5, 10.0], [38.6, 10.0], [38.7, 10.0], [38.8, 10.0], [38.9, 10.0], [39.0, 10.0], [39.1, 10.0], [39.2, 10.0], [39.3, 10.0], [39.4, 10.0], [39.5, 10.0], [39.6, 10.0], [39.7, 10.0], [39.8, 10.0], [39.9, 10.0], [40.0, 10.0], [40.1, 10.0], [40.2, 10.0], [40.3, 10.0], [40.4, 10.0], [40.5, 11.0], [40.6, 11.0], [40.7, 11.0], [40.8, 11.0], [40.9, 11.0], [41.0, 11.0], [41.1, 11.0], [41.2, 11.0], [41.3, 11.0], [41.4, 11.0], [41.5, 11.0], [41.6, 11.0], [41.7, 11.0], [41.8, 11.0], [41.9, 11.0], [42.0, 11.0], [42.1, 11.0], [42.2, 11.0], [42.3, 11.0], [42.4, 11.0], [42.5, 11.0], [42.6, 11.0], [42.7, 11.0], [42.8, 11.0], [42.9, 11.0], [43.0, 11.0], [43.1, 11.0], [43.2, 11.0], [43.3, 11.0], [43.4, 11.0], [43.5, 11.0], [43.6, 11.0], [43.7, 11.0], [43.8, 11.0], [43.9, 11.0], [44.0, 11.0], [44.1, 11.0], [44.2, 11.0], [44.3, 11.0], [44.4, 11.0], [44.5, 11.0], [44.6, 11.0], [44.7, 11.0], [44.8, 11.0], [44.9, 11.0], [45.0, 11.0], [45.1, 11.0], [45.2, 11.0], [45.3, 11.0], [45.4, 11.0], [45.5, 11.0], [45.6, 11.0], [45.7, 11.0], [45.8, 11.0], [45.9, 11.0], [46.0, 11.0], [46.1, 11.0], [46.2, 11.0], [46.3, 11.0], [46.4, 11.0], [46.5, 11.0], [46.6, 11.0], [46.7, 11.0], [46.8, 11.0], [46.9, 11.0], [47.0, 11.0], [47.1, 11.0], [47.2, 11.0], [47.3, 11.0], [47.4, 11.0], [47.5, 11.0], [47.6, 11.0], [47.7, 11.0], [47.8, 11.0], [47.9, 11.0], [48.0, 11.0], [48.1, 11.0], [48.2, 11.0], [48.3, 11.0], [48.4, 11.0], [48.5, 11.0], [48.6, 11.0], [48.7, 11.0], [48.8, 11.0], [48.9, 11.0], [49.0, 11.0], [49.1, 11.0], [49.2, 11.0], [49.3, 11.0], [49.4, 11.0], [49.5, 11.0], [49.6, 11.0], [49.7, 11.0], [49.8, 11.0], [49.9, 11.0], [50.0, 11.0], [50.1, 11.0], [50.2, 11.0], [50.3, 11.0], [50.4, 11.0], [50.5, 11.0], [50.6, 11.0], [50.7, 11.0], [50.8, 11.0], [50.9, 11.0], [51.0, 11.0], [51.1, 11.0], [51.2, 11.0], [51.3, 11.0], [51.4, 11.0], [51.5, 11.0], [51.6, 11.0], [51.7, 11.0], [51.8, 11.0], [51.9, 11.0], [52.0, 11.0], [52.1, 11.0], [52.2, 11.0], [52.3, 11.0], [52.4, 11.0], [52.5, 11.0], [52.6, 11.0], [52.7, 11.0], [52.8, 11.0], [52.9, 11.0], [53.0, 11.0], [53.1, 11.0], [53.2, 11.0], [53.3, 11.0], [53.4, 11.0], [53.5, 11.0], [53.6, 11.0], [53.7, 11.0], [53.8, 11.0], [53.9, 11.0], [54.0, 11.0], [54.1, 11.0], [54.2, 11.0], [54.3, 11.0], [54.4, 11.0], [54.5, 11.0], [54.6, 11.0], [54.7, 11.0], [54.8, 11.0], [54.9, 11.0], [55.0, 11.0], [55.1, 11.0], [55.2, 11.0], [55.3, 11.0], [55.4, 11.0], [55.5, 11.0], [55.6, 11.0], [55.7, 11.0], [55.8, 11.0], [55.9, 11.0], [56.0, 11.0], [56.1, 11.0], [56.2, 11.0], [56.3, 11.0], [56.4, 11.0], [56.5, 11.0], [56.6, 11.0], [56.7, 11.0], [56.8, 11.0], [56.9, 11.0], [57.0, 11.0], [57.1, 11.0], [57.2, 11.0], [57.3, 11.0], [57.4, 11.0], [57.5, 11.0], [57.6, 11.0], [57.7, 11.0], [57.8, 11.0], [57.9, 11.0], [58.0, 11.0], [58.1, 11.0], [58.2, 11.0], [58.3, 11.0], [58.4, 11.0], [58.5, 11.0], [58.6, 11.0], [58.7, 11.0], [58.8, 11.0], [58.9, 11.0], [59.0, 11.0], [59.1, 11.0], [59.2, 11.0], [59.3, 11.0], [59.4, 11.0], [59.5, 11.0], [59.6, 11.0], [59.7, 11.0], [59.8, 11.0], [59.9, 11.0], [60.0, 11.0], [60.1, 11.0], [60.2, 11.0], [60.3, 11.0], [60.4, 11.0], [60.5, 11.0], [60.6, 11.0], [60.7, 11.0], [60.8, 11.0], [60.9, 11.0], [61.0, 11.0], [61.1, 11.0], [61.2, 11.0], [61.3, 11.0], [61.4, 11.0], [61.5, 11.0], [61.6, 11.0], [61.7, 11.0], [61.8, 11.0], [61.9, 11.0], [62.0, 11.0], [62.1, 11.0], [62.2, 11.0], [62.3, 11.0], [62.4, 11.0], [62.5, 11.0], [62.6, 11.0], [62.7, 11.0], [62.8, 11.0], [62.9, 12.0], [63.0, 12.0], [63.1, 12.0], [63.2, 12.0], [63.3, 12.0], [63.4, 12.0], [63.5, 12.0], [63.6, 12.0], [63.7, 12.0], [63.8, 12.0], [63.9, 12.0], [64.0, 12.0], [64.1, 12.0], [64.2, 12.0], [64.3, 12.0], [64.4, 12.0], [64.5, 12.0], [64.6, 12.0], [64.7, 12.0], [64.8, 12.0], [64.9, 12.0], [65.0, 12.0], [65.1, 12.0], [65.2, 12.0], [65.3, 12.0], [65.4, 12.0], [65.5, 12.0], [65.6, 12.0], [65.7, 12.0], [65.8, 12.0], [65.9, 12.0], [66.0, 12.0], [66.1, 12.0], [66.2, 12.0], [66.3, 12.0], [66.4, 12.0], [66.5, 12.0], [66.6, 12.0], [66.7, 12.0], [66.8, 12.0], [66.9, 12.0], [67.0, 12.0], [67.1, 12.0], [67.2, 12.0], [67.3, 12.0], [67.4, 12.0], [67.5, 12.0], [67.6, 12.0], [67.7, 12.0], [67.8, 12.0], [67.9, 12.0], [68.0, 12.0], [68.1, 12.0], [68.2, 12.0], [68.3, 12.0], [68.4, 12.0], [68.5, 12.0], [68.6, 12.0], [68.7, 12.0], [68.8, 12.0], [68.9, 12.0], [69.0, 12.0], [69.1, 12.0], [69.2, 12.0], [69.3, 12.0], [69.4, 12.0], [69.5, 12.0], [69.6, 12.0], [69.7, 12.0], [69.8, 12.0], [69.9, 12.0], [70.0, 12.0], [70.1, 12.0], [70.2, 12.0], [70.3, 12.0], [70.4, 12.0], [70.5, 12.0], [70.6, 12.0], [70.7, 12.0], [70.8, 12.0], [70.9, 12.0], [71.0, 12.0], [71.1, 12.0], [71.2, 12.0], [71.3, 12.0], [71.4, 12.0], [71.5, 12.0], [71.6, 12.0], [71.7, 12.0], [71.8, 12.0], [71.9, 12.0], [72.0, 12.0], [72.1, 12.0], [72.2, 12.0], [72.3, 12.0], [72.4, 12.0], [72.5, 12.0], [72.6, 12.0], [72.7, 12.0], [72.8, 12.0], [72.9, 12.0], [73.0, 12.0], [73.1, 12.0], [73.2, 12.0], [73.3, 12.0], [73.4, 12.0], [73.5, 12.0], [73.6, 12.0], [73.7, 12.0], [73.8, 12.0], [73.9, 12.0], [74.0, 12.0], [74.1, 12.0], [74.2, 12.0], [74.3, 12.0], [74.4, 12.0], [74.5, 12.0], [74.6, 12.0], [74.7, 12.0], [74.8, 12.0], [74.9, 12.0], [75.0, 12.0], [75.1, 12.0], [75.2, 12.0], [75.3, 12.0], [75.4, 12.0], [75.5, 12.0], [75.6, 13.0], [75.7, 13.0], [75.8, 13.0], [75.9, 13.0], [76.0, 13.0], [76.1, 13.0], [76.2, 13.0], [76.3, 13.0], [76.4, 13.0], [76.5, 13.0], [76.6, 13.0], [76.7, 13.0], [76.8, 13.0], [76.9, 13.0], [77.0, 13.0], [77.1, 13.0], [77.2, 13.0], [77.3, 13.0], [77.4, 13.0], [77.5, 13.0], [77.6, 13.0], [77.7, 13.0], [77.8, 13.0], [77.9, 13.0], [78.0, 13.0], [78.1, 13.0], [78.2, 13.0], [78.3, 13.0], [78.4, 13.0], [78.5, 13.0], [78.6, 13.0], [78.7, 13.0], [78.8, 13.0], [78.9, 13.0], [79.0, 13.0], [79.1, 13.0], [79.2, 13.0], [79.3, 13.0], [79.4, 13.0], [79.5, 13.0], [79.6, 13.0], [79.7, 13.0], [79.8, 13.0], [79.9, 13.0], [80.0, 13.0], [80.1, 13.0], [80.2, 13.0], [80.3, 13.0], [80.4, 13.0], [80.5, 13.0], [80.6, 13.0], [80.7, 13.0], [80.8, 13.0], [80.9, 13.0], [81.0, 13.0], [81.1, 13.0], [81.2, 13.0], [81.3, 13.0], [81.4, 13.0], [81.5, 13.0], [81.6, 13.0], [81.7, 13.0], [81.8, 13.0], [81.9, 13.0], [82.0, 14.0], [82.1, 14.0], [82.2, 14.0], [82.3, 14.0], [82.4, 14.0], [82.5, 14.0], [82.6, 14.0], [82.7, 14.0], [82.8, 14.0], [82.9, 14.0], [83.0, 14.0], [83.1, 14.0], [83.2, 14.0], [83.3, 14.0], [83.4, 14.0], [83.5, 14.0], [83.6, 14.0], [83.7, 14.0], [83.8, 14.0], [83.9, 14.0], [84.0, 14.0], [84.1, 14.0], [84.2, 14.0], [84.3, 14.0], [84.4, 14.0], [84.5, 14.0], [84.6, 14.0], [84.7, 14.0], [84.8, 14.0], [84.9, 14.0], [85.0, 14.0], [85.1, 14.0], [85.2, 14.0], [85.3, 14.0], [85.4, 14.0], [85.5, 14.0], [85.6, 14.0], [85.7, 15.0], [85.8, 15.0], [85.9, 15.0], [86.0, 15.0], [86.1, 15.0], [86.2, 15.0], [86.3, 15.0], [86.4, 15.0], [86.5, 15.0], [86.6, 15.0], [86.7, 15.0], [86.8, 15.0], [86.9, 15.0], [87.0, 15.0], [87.1, 15.0], [87.2, 15.0], [87.3, 15.0], [87.4, 15.0], [87.5, 15.0], [87.6, 15.0], [87.7, 15.0], [87.8, 16.0], [87.9, 16.0], [88.0, 16.0], [88.1, 16.0], [88.2, 16.0], [88.3, 16.0], [88.4, 16.0], [88.5, 16.0], [88.6, 16.0], [88.7, 16.0], [88.8, 16.0], [88.9, 16.0], [89.0, 17.0], [89.1, 17.0], [89.2, 17.0], [89.3, 17.0], [89.4, 17.0], [89.5, 17.0], [89.6, 17.0], [89.7, 17.0], [89.8, 18.0], [89.9, 18.0], [90.0, 18.0], [90.1, 18.0], [90.2, 18.0], [90.3, 18.0], [90.4, 19.0], [90.5, 19.0], [90.6, 19.0], [90.7, 19.0], [90.8, 19.0], [90.9, 19.0], [91.0, 20.0], [91.1, 20.0], [91.2, 20.0], [91.3, 20.0], [91.4, 20.0], [91.5, 20.0], [91.6, 21.0], [91.7, 21.0], [91.8, 21.0], [91.9, 21.0], [92.0, 22.0], [92.1, 22.0], [92.2, 22.0], [92.3, 22.0], [92.4, 23.0], [92.5, 23.0], [92.6, 23.0], [92.7, 24.0], [92.8, 24.0], [92.9, 24.0], [93.0, 25.0], [93.1, 25.0], [93.2, 26.0], [93.3, 26.0], [93.4, 27.0], [93.5, 28.0], [93.6, 29.0], [93.7, 30.0], [93.8, 32.0], [93.9, 33.0], [94.0, 34.0], [94.1, 35.0], [94.2, 36.0], [94.3, 38.0], [94.4, 41.0], [94.5, 43.0], [94.6, 46.0], [94.7, 50.0], [94.8, 53.0], [94.9, 58.0], [95.0, 63.0], [95.1, 67.0], [95.2, 72.0], [95.3, 79.0], [95.4, 85.0], [95.5, 92.0], [95.6, 99.0], [95.7, 106.0], [95.8, 116.0], [95.9, 128.0], [96.0, 141.0], [96.1, 154.0], [96.2, 170.0], [96.3, 185.0], [96.4, 202.0], [96.5, 210.0], [96.6, 211.0], [96.7, 212.0], [96.8, 213.0], [96.9, 213.0], [97.0, 214.0], [97.1, 214.0], [97.2, 215.0], [97.3, 216.0], [97.4, 218.0], [97.5, 219.0], [97.6, 221.0], [97.7, 222.0], [97.8, 223.0], [97.9, 224.0], [98.0, 225.0], [98.1, 226.0], [98.2, 227.0], [98.3, 227.0], [98.4, 228.0], [98.5, 229.0], [98.6, 229.0], [98.7, 230.0], [98.8, 231.0], [98.9, 232.0], [99.0, 234.0], [99.1, 236.0], [99.2, 239.0], [99.3, 247.0], [99.4, 258.0], [99.5, 273.0], [99.6, 324.0], [99.7, 436.0], [99.8, 449.0], [99.9, 621.0], [100.0, 2709.0]], "isOverall": false, "label": "login-24", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 415217.0, "series": [{"data": [[0.0, 269813.0], [100.0, 4064.0], [32900.0, 4.0], [34100.0, 2.0], [33700.0, 2.0], [34500.0, 2.0], [33300.0, 2.0], [36500.0, 26.0], [34900.0, 2.0], [35300.0, 2.0], [39700.0, 2.0], [42900.0, 22.0], [43700.0, 2.0], [50500.0, 6.0], [200.0, 67742.0], [52100.0, 4.0], [53300.0, 32.0], [56100.0, 6.0], [56500.0, 16.0], [58100.0, 4.0], [300.0, 18862.0], [400.0, 1794.0], [500.0, 734.0], [600.0, 19454.0], [700.0, 15952.0], [800.0, 3918.0], [900.0, 158.0], [1000.0, 584.0], [1100.0, 422.0], [1200.0, 278.0], [1300.0, 98.0], [1400.0, 3028.0], [1500.0, 9986.0], [1600.0, 5420.0], [1700.0, 252.0], [1800.0, 150.0], [1900.0, 130.0], [2000.0, 58.0], [2100.0, 50.0], [2300.0, 6.0], [2200.0, 22.0], [2400.0, 10.0], [2500.0, 8.0], [2600.0, 14.0], [2700.0, 22.0], [2800.0, 22.0], [2900.0, 12.0], [3000.0, 14.0], [3100.0, 3376.0], [3200.0, 3774.0], [3300.0, 1746.0], [3400.0, 148.0], [3500.0, 62.0], [3600.0, 50.0], [3700.0, 36.0], [3800.0, 16.0], [3900.0, 20.0], [4000.0, 20.0], [4100.0, 28.0], [4300.0, 16.0], [4200.0, 26.0], [4400.0, 18.0], [4600.0, 8.0], [4500.0, 6.0], [4700.0, 12.0], [4800.0, 6.0], [5000.0, 12.0], [4900.0, 4.0], [5100.0, 2.0], [5300.0, 2.0], [5200.0, 2.0], [5400.0, 2.0], [5500.0, 2.0], [5700.0, 2.0], [6100.0, 2.0], [6300.0, 600.0], [6500.0, 1982.0], [6600.0, 1378.0], [6400.0, 134.0], [6700.0, 348.0], [6900.0, 56.0], [6800.0, 84.0], [7100.0, 28.0], [7000.0, 38.0], [7200.0, 24.0], [7300.0, 4.0], [7400.0, 6.0], [7500.0, 10.0], [7600.0, 4.0], [7700.0, 6.0], [7800.0, 14.0], [8000.0, 2.0], [8100.0, 6.0], [8200.0, 2.0], [8700.0, 6.0], [8400.0, 8.0], [8600.0, 6.0], [8300.0, 4.0], [8500.0, 4.0], [8900.0, 6.0], [8800.0, 4.0], [9000.0, 2.0], [9100.0, 2.0], [9200.0, 2.0], [9400.0, 2.0], [9700.0, 6.0], [9300.0, 2.0], [9500.0, 2.0], [9800.0, 2.0], [10200.0, 8.0], [10400.0, 2.0], [10800.0, 2.0], [11700.0, 2.0], [13100.0, 438.0], [13000.0, 394.0], [12900.0, 226.0], [13200.0, 278.0], [13300.0, 452.0], [13400.0, 170.0], [13500.0, 146.0], [13600.0, 30.0], [13700.0, 18.0], [13800.0, 16.0], [13900.0, 6.0], [14000.0, 10.0], [14300.0, 6.0], [14100.0, 2.0], [14200.0, 2.0], [14400.0, 2.0], [14500.0, 2.0], [14700.0, 2.0], [14800.0, 4.0], [15300.0, 4.0], [15000.0, 2.0], [15500.0, 4.0], [15700.0, 4.0], [15800.0, 2.0], [15400.0, 4.0], [15900.0, 2.0], [16200.0, 2.0], [16300.0, 2.0], [16000.0, 2.0], [16400.0, 6.0], [16800.0, 8.0], [16600.0, 2.0], [17600.0, 4.0], [18600.0, 2.0], [19000.0, 2.0], [18800.0, 2.0], [19800.0, 4.0], [20600.0, 4.0], [20800.0, 2.0], [21600.0, 2.0], [23600.0, 2.0], [26600.0, 228.0], [26000.0, 88.0], [26400.0, 2.0], [27000.0, 58.0], [27600.0, 4.0], [27800.0, 4.0], [28000.0, 6.0], [30200.0, 84.0], [30000.0, 170.0], [30600.0, 44.0], [30400.0, 2.0], [31400.0, 18.0], [31000.0, 2.0], [31600.0, 2.0], [32000.0, 2.0], [33200.0, 32.0], [34400.0, 2.0], [32800.0, 2.0], [36400.0, 32.0], [35200.0, 2.0], [37200.0, 2.0], [43200.0, 30.0], [44400.0, 2.0], [53200.0, 22.0], [54400.0, 2.0], [56000.0, 10.0], [56400.0, 2.0], [57600.0, 2.0], [33100.0, 44.0], [34300.0, 2.0], [33900.0, 2.0], [36700.0, 12.0], [36300.0, 2.0], [37100.0, 2.0], [43100.0, 30.0], [43500.0, 4.0], [46700.0, 2.0], [45900.0, 2.0], [47500.0, 2.0], [52300.0, 10.0], [53100.0, 6.0], [54300.0, 8.0], [82200.0, 2.0], [16500.0, 2.0], [16700.0, 2.0], [17100.0, 4.0], [17900.0, 4.0], [18100.0, 2.0], [17700.0, 4.0], [18300.0, 2.0], [19100.0, 4.0], [21500.0, 2.0], [26100.0, 202.0], [26500.0, 244.0], [25900.0, 4.0], [26700.0, 6.0], [27100.0, 78.0], [27300.0, 4.0], [27500.0, 4.0], [26900.0, 2.0], [27700.0, 2.0], [28100.0, 8.0], [29500.0, 2.0], [28700.0, 2.0], [29100.0, 2.0], [30300.0, 14.0], [30700.0, 32.0], [29700.0, 4.0], [31500.0, 34.0], [31100.0, 4.0], [30900.0, 4.0], [31700.0, 2.0], [32500.0, 2.0], [32100.0, 2.0], [33000.0, 8.0], [34200.0, 4.0], [36600.0, 16.0], [35800.0, 2.0], [43000.0, 8.0], [43400.0, 22.0], [50600.0, 2.0], [52200.0, 24.0], [54200.0, 4.0], [53400.0, 2.0], [56600.0, 16.0], [57000.0, 2.0], [55400.0, 2.0], [57400.0, 2.0], [84400.0, 2.0]], "isOverall": false, "label": "home-13", "isController": true}, {"data": [[0.0, 415217.0], [600.0, 304.0], [700.0, 69.0], [800.0, 181.0], [900.0, 70.0], [1000.0, 122.0], [1100.0, 53.0], [1200.0, 34.0], [1300.0, 24.0], [1400.0, 17.0], [1500.0, 14.0], [100.0, 4131.0], [1600.0, 12.0], [1700.0, 24.0], [1800.0, 9.0], [1900.0, 11.0], [2000.0, 8.0], [2100.0, 2.0], [2300.0, 4.0], [2200.0, 2.0], [2400.0, 4.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 3.0], [2700.0, 3.0], [2900.0, 3.0], [3000.0, 3.0], [3100.0, 1.0], [200.0, 17046.0], [3600.0, 1.0], [3900.0, 1.0], [4000.0, 2.0], [4200.0, 1.0], [300.0, 906.0], [400.0, 2409.0], [500.0, 480.0]], "isOverall": false, "label": "login-23", "isController": false}, {"data": [[0.0, 210897.0], [2100.0, 1.0], [600.0, 84.0], [2500.0, 1.0], [700.0, 16.0], [2700.0, 1.0], [200.0, 7010.0], [800.0, 73.0], [900.0, 25.0], [1000.0, 5.0], [1100.0, 11.0], [300.0, 110.0], [1200.0, 8.0], [1300.0, 1.0], [1400.0, 2.0], [1500.0, 2.0], [400.0, 585.0], [100.0, 1721.0], [1600.0, 3.0], [1700.0, 7.0], [1800.0, 2.0], [500.0, 14.0], [2000.0, 1.0]], "isOverall": false, "label": "login-24", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 84400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 398.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 621737.0, "series": [{"data": [[0.0, 621737.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 22880.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 16891.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 398.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.5776913E12, "maxY": 100.0, "series": [{"data": [[1.57769226E12, 50.0], [1.57769256E12, 29.42560313978989], [1.57769166E12, 20.0], [1.57769388E12, 15.190630660993428], [1.57769358E12, 76.74903662688503], [1.57769196E12, 50.0], [1.57769376E12, 39.156547917712004], [1.57769346E12, 98.79401533570285], [1.57769184E12, 33.35654040213871], [1.57769286E12, 95.20987654320993], [1.57769154E12, 20.0], [1.57769316E12, 100.0], [1.57769178E12, 6.316599761789215], [1.57769148E12, 20.0], [1.5776937E12, 52.2649882335364], [1.57769208E12, 50.0], [1.5776931E12, 100.0], [1.5776934E12, 100.0], [1.57769298E12, 100.0], [1.57769328E12, 100.0], [1.57769238E12, 50.0], [1.57769136E12, 1.730813433788788], [1.57769268E12, 6.548633773318393], [1.57769322E12, 100.0], [1.57769352E12, 88.74939163351254], [1.57769262E12, 17.290953271027973], [1.5776916E12, 20.0], [1.5776913E12, 1.0], [1.57769292E12, 100.0], [1.5776925E12, 41.57787100157305], [1.5776928E12, 45.92321614232344], [1.5776919E12, 50.0], [1.5776922E12, 50.0], [1.57769382E12, 27.392069975339002], [1.57769274E12, 8.780712345306387], [1.57769304E12, 100.0], [1.57769214E12, 50.0], [1.57769244E12, 49.6946190690017], [1.57769202E12, 50.0], [1.57769232E12, 50.0], [1.57769394E12, 5.282939832444799], [1.57769142E12, 18.24144996647061], [1.57769334E12, 100.0], [1.57769172E12, 16.793076406005017], [1.57769364E12, 65.25305481857963]], "isOverall": false, "label": "jp@gc - Ultimate Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57769394E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 10.723745473357464, "minX": 1.0, "maxY": 1441.9599999999996, "series": [{"data": [[2.0, 21.425558312655067], [3.0, 21.82889258950875], [4.0, 24.302464788732404], [5.0, 27.474304715840322], [6.0, 36.45230953809234], [7.0, 45.79484173505275], [8.0, 57.00646412411112], [9.0, 88.57981018119084], [10.0, 82.07739183424744], [11.0, 92.33041848844455], [12.0, 96.38847352024919], [13.0, 109.78873239436618], [14.0, 134.39108554996406], [15.0, 126.55971594577174], [16.0, 154.91857659831098], [17.0, 157.89330808080732], [18.0, 138.07724803862394], [19.0, 197.94452347083904], [20.0, 191.17676931974376], [21.0, 199.65454545454557], [22.0, 211.75532900834145], [23.0, 199.25500910746814], [24.0, 252.4675174013921], [25.0, 244.1775889967631], [26.0, 292.4451003541911], [27.0, 265.7746478873237], [28.0, 276.43879472692987], [29.0, 300.6518904823984], [30.0, 346.65968063872225], [31.0, 267.11359026369166], [32.0, 340.74801587301624], [33.0, 331.6205985915497], [34.0, 402.67174887892367], [35.0, 448.55807365439057], [36.0, 295.1030927835046], [37.0, 370.08501259445785], [38.0, 346.3218750000009], [39.0, 437.6722614840984], [40.0, 311.3638059701491], [41.0, 286.0387931034481], [42.0, 519.4500000000005], [43.0, 469.07025246981306], [44.0, 491.93195625759415], [45.0, 450.5894736842108], [46.0, 457.61992882562225], [47.0, 517.6018018018024], [48.0, 463.578246392897], [49.0, 593.2214876033065], [50.0, 519.388422304383], [51.0, 498.8043478260867], [52.0, 583.9711431742512], [53.0, 454.62127659574503], [54.0, 469.63054187192137], [55.0, 1441.9599999999996], [56.0, 722.1512195121949], [57.0, 438.13909774436104], [58.0, 640.79185520362], [59.0, 561.3759157509179], [60.0, 1025.4392523364488], [61.0, 663.4069050554878], [62.0, 697.3128654970768], [63.0, 825.273775216138], [64.0, 617.199203187251], [65.0, 589.9120234604114], [66.0, 538.012658227849], [67.0, 710.429752066115], [68.0, 887.5982404692082], [69.0, 573.5905511811019], [70.0, 810.3540856031128], [71.0, 1044.963414634147], [72.0, 665.8317890235189], [73.0, 836.1926605504595], [74.0, 734.3444976076553], [75.0, 769.4327868852463], [76.0, 907.2950819672133], [77.0, 871.6973365617424], [78.0, 849.2474645030437], [79.0, 776.0634146341462], [80.0, 712.6995305164319], [81.0, 883.6857506361328], [82.0, 723.819637139808], [83.0, 891.0905797101449], [84.0, 598.0099999999995], [85.0, 839.5195822454314], [86.0, 1245.400000000001], [87.0, 1142.8109640831765], [88.0, 939.6806722689078], [89.0, 893.9011566771829], [90.0, 1089.8376623376616], [91.0, 1073.5457413249226], [92.0, 1144.6562499999998], [93.0, 955.8095238095237], [94.0, 1059.7289002557554], [95.0, 896.931947069943], [96.0, 1043.4827586206884], [97.0, 1267.840155945418], [98.0, 1171.873015873016], [99.0, 903.5258175559381], [100.0, 1077.0889151734004], [1.0, 20.230033600413538]], "isOverall": false, "label": "home-13", "isController": true}, {"data": [[54.23298004154369, 569.2936889960062]], "isOverall": false, "label": "home-13-Aggregated", "isController": true}, {"data": [[2.0, 17.054104477611936], [3.0, 17.075219389887167], [4.0, 19.01128747795412], [5.0, 20.275248718721713], [6.0, 20.977751052315075], [7.0, 21.309677419354824], [8.0, 25.068174474959616], [9.0, 32.616017316017334], [10.0, 24.924089378634775], [11.0, 22.597499999999993], [12.0, 26.470863197257742], [13.0, 25.82180036742192], [14.0, 32.11616161616164], [15.0, 30.0277419354839], [16.0, 22.36085904416209], [17.0, 33.53354430379739], [18.0, 33.73839662447255], [19.0, 44.67380442541045], [20.0, 26.63422127444235], [21.0, 43.39322916666665], [22.0, 33.31005586592178], [23.0, 25.421846435100523], [24.0, 23.67558139534884], [25.0, 43.12760834670944], [26.0, 44.84964200477325], [27.0, 24.79771265189425], [28.0, 25.594581971041542], [29.0, 25.665683382497548], [30.0, 57.32887568103007], [31.0, 40.64483111566016], [32.0, 25.76476426799012], [33.0, 24.908127208480593], [34.0, 27.25698827772765], [35.0, 30.098025387870216], [36.0, 25.768215720022912], [37.0, 24.27734005672864], [38.0, 27.84020887728462], [39.0, 26.185185185185226], [40.0, 24.87107360525082], [41.0, 94.6269672479794], [42.0, 141.80941036331146], [43.0, 26.241322314049608], [44.0, 29.125151148730346], [45.0, 29.361977916466614], [46.0, 26.402278390886416], [47.0, 31.498176845943394], [48.0, 40.086980920314296], [49.0, 37.337871287128756], [50.0, 33.662752239027725], [51.0, 116.56934306569325], [52.0, 51.34065315315321], [53.0, 40.691995947315064], [54.0, 34.16421568627449], [55.0, 36.05025125628141], [56.0, 24.906710310965636], [57.0, 33.592452830188684], [58.0, 33.71011235955054], [59.0, 23.694214876033033], [60.0, 30.917874396135254], [61.0, 27.324723247232434], [62.0, 27.1559297218155], [63.0, 28.9299270072993], [64.0, 29.029354207436395], [65.0, 27.57840236686393], [66.0, 29.4059511158342], [67.0, 24.674211248285328], [68.0, 28.14809384164225], [69.0, 23.539137380191697], [70.0, 33.050387596899235], [71.0, 32.40277777777777], [72.0, 26.20229144289291], [73.0, 32.239329268292664], [74.0, 29.52744630071599], [75.0, 21.338016528925653], [76.0, 30.790774299835256], [77.0, 25.125075528700922], [78.0, 26.364657814096013], [79.0, 40.7858880778589], [80.0, 25.709523809523795], [81.0, 30.422759059122708], [82.0, 28.818423855165047], [83.0, 28.01186131386858], [84.0, 62.82048192771081], [85.0, 321.4623243933587], [86.0, 214.9318181818181], [87.0, 43.13951219512193], [88.0, 32.341552990556124], [89.0, 33.0073336825563], [90.0, 32.12582781456953], [91.0, 30.799999999999986], [92.0, 33.61160714285716], [93.0, 28.332539682539668], [94.0, 31.975032010243257], [95.0, 28.625118035882892], [96.0, 28.401384083044988], [97.0, 34.75486381322959], [98.0, 27.069008009858294], [99.0, 28.95609126130006], [100.0, 36.385868350469124], [1.0, 16.280206985769766]], "isOverall": false, "label": "login-23", "isController": false}, {"data": [[54.24162630079406, 33.15266120093455]], "isOverall": false, "label": "login-23-Aggregated", "isController": false}, {"data": [[2.0, 11.083333333333332], [3.0, 11.323283082077044], [4.0, 12.549047282992221], [5.0, 13.323688969258596], [6.0, 14.06186186186188], [7.0, 13.74985320023488], [8.0, 17.684346701164333], [9.0, 22.526816608996516], [10.0, 18.25703794369646], [11.0, 16.382113821138198], [12.0, 17.66666666666665], [13.0, 18.55990220048898], [14.0, 20.90810419681622], [15.0, 20.55935483870968], [16.0, 16.571946795646923], [17.0, 20.847812301838925], [18.0, 22.946987951807216], [19.0, 30.103571428571414], [20.0, 18.430471234460782], [21.0, 28.871527777777786], [22.0, 22.3196261682243], [23.0, 18.919487648673375], [24.0, 17.969802555168418], [25.0, 26.718975180144124], [26.0, 30.728143712574848], [27.0, 18.11874105865521], [28.0, 17.376514445479945], [29.0, 18.752624671916006], [30.0, 37.7111770524234], [31.0, 29.545081967213147], [32.0, 16.53976143141154], [33.0, 18.469496021220127], [34.0, 17.135256988277746], [35.0, 19.12676056338027], [36.0, 16.58160919540231], [37.0, 15.928751576292557], [38.0, 17.50416666666665], [39.0, 18.330687830687825], [40.0, 17.714553990610362], [41.0, 62.7925486875529], [42.0, 90.76350540216082], [43.0, 19.191629955947146], [44.0, 19.869407496977], [45.0, 19.887931034482758], [46.0, 19.146514935988662], [47.0, 20.55606198723796], [48.0, 25.883352208380504], [49.0, 23.992574257425783], [50.0, 23.259643255295348], [51.0, 71.88888888888886], [52.0, 31.784667418263787], [53.0, 24.871485943775102], [54.0, 27.990243902439026], [55.0, 24.128712871287142], [56.0, 18.322950819672137], [57.0, 18.40151515151516], [58.0, 20.399103139013448], [59.0, 16.36880733944953], [60.0, 22.29126213592234], [61.0, 18.829238329238322], [62.0, 18.570381231671536], [63.0, 18.111111111111093], [64.0, 23.97674418604652], [65.0, 22.14540059347181], [66.0, 20.159235668789798], [67.0, 15.412894375857336], [68.0, 17.03823529411766], [69.0, 18.698717948717945], [70.0, 26.122605363984697], [71.0, 16.727272727272723], [72.0, 18.197849462365593], [73.0, 21.173515981735132], [74.0, 19.61190476190476], [75.0, 16.327242524916958], [76.0, 19.65131578947368], [77.0, 17.56642512077295], [78.0, 19.44897959183675], [79.0, 28.190243902439033], [80.0, 20.76442307692308], [81.0, 20.45247148288973], [82.0, 18.266240681576157], [83.0, 17.793795620437947], [84.0, 28.306220095693764], [85.0, 218.59798994974875], [86.0, 138.59375000000006], [87.0, 32.954635108481256], [88.0, 21.010482180293486], [89.0, 19.94240837696338], [90.0, 18.185430463576157], [91.0, 16.198717948717942], [92.0, 29.933333333333323], [93.0, 22.17488076311605], [94.0, 20.405889884763145], [95.0, 16.737240075614363], [96.0, 20.444827586206895], [97.0, 18.742690058479553], [98.0, 18.280788177339915], [99.0, 19.233620689655183], [100.0, 24.062452271414955], [1.0, 10.723745473357464]], "isOverall": false, "label": "login-24", "isController": false}, {"data": [[54.24238824916155, 22.399700788829758]], "isOverall": false, "label": "login-24-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7931.2, "minX": 1.5776913E12, "maxY": 556156.2666666667, "series": [{"data": [[1.57769226E12, 543039.4166666666], [1.57769256E12, 539459.3166666667], [1.57769166E12, 555587.3166666667], [1.57769388E12, 492424.51666666666], [1.57769358E12, 553866.3333333334], [1.57769196E12, 553705.3833333333], [1.57769376E12, 537425.5666666667], [1.57769346E12, 552340.9666666667], [1.57769184E12, 550414.9666666667], [1.57769286E12, 550911.7333333333], [1.57769154E12, 553746.2666666667], [1.57769316E12, 552004.1166666667], [1.57769178E12, 470329.06666666665], [1.57769148E12, 553935.2], [1.5776937E12, 554944.0], [1.57769208E12, 543189.8333333334], [1.5776931E12, 541970.5333333333], [1.5776934E12, 551714.1833333333], [1.57769298E12, 552240.7333333333], [1.57769328E12, 552385.0], [1.57769238E12, 553291.5333333333], [1.57769136E12, 162532.2], [1.57769268E12, 425824.05], [1.57769322E12, 551976.45], [1.57769352E12, 535884.95], [1.57769262E12, 554547.15], [1.5776916E12, 518199.56666666665], [1.5776913E12, 36793.066666666666], [1.57769292E12, 552069.8], [1.5776925E12, 553130.4], [1.5776928E12, 538137.7166666667], [1.5776919E12, 552909.65], [1.5776922E12, 553458.4333333333], [1.57769382E12, 538284.6666666666], [1.57769274E12, 137565.38333333333], [1.57769304E12, 545687.9166666666], [1.57769214E12, 553578.3333333334], [1.57769244E12, 554142.45], [1.57769202E12, 553323.6166666667], [1.57769232E12, 533711.1333333333], [1.57769394E12, 272195.8333333333], [1.57769142E12, 556156.2666666667], [1.57769334E12, 546976.1666666666], [1.57769172E12, 555321.7833333333], [1.57769364E12, 554199.3166666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57769226E12, 116740.85], [1.57769256E12, 115880.5], [1.57769166E12, 119557.9], [1.57769388E12, 105859.4], [1.57769358E12, 119118.75], [1.57769196E12, 119207.2], [1.57769376E12, 115537.6], [1.57769346E12, 118995.9], [1.57769184E12, 118450.15], [1.57769286E12, 118706.65], [1.57769154E12, 119193.35], [1.57769316E12, 119002.35], [1.57769178E12, 101094.8], [1.57769148E12, 119208.55], [1.5776937E12, 119305.65], [1.57769208E12, 116925.3], [1.5776931E12, 116766.4], [1.5776934E12, 118979.2], [1.57769298E12, 118973.7], [1.57769328E12, 119004.0], [1.57769238E12, 119111.1], [1.57769136E12, 34922.45], [1.57769268E12, 91564.6], [1.57769322E12, 118929.5], [1.57769352E12, 115297.1], [1.57769262E12, 119298.25], [1.5776916E12, 111537.0], [1.5776913E12, 7931.2], [1.57769292E12, 118966.0], [1.5776925E12, 119037.65], [1.5776928E12, 115811.35], [1.5776919E12, 119029.15], [1.5776922E12, 119185.1], [1.57769382E12, 115716.2], [1.57769274E12, 29548.15], [1.57769304E12, 117606.75], [1.57769214E12, 119141.15], [1.57769244E12, 119149.3], [1.57769202E12, 119096.2], [1.57769232E12, 115014.25], [1.57769394E12, 58552.9], [1.57769142E12, 119713.3], [1.57769334E12, 117866.2], [1.57769172E12, 119417.85], [1.57769364E12, 119215.35]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57769394E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 10.66011235955056, "minX": 1.5776913E12, "maxY": 1116.6421889616433, "series": [{"data": [[1.57769226E12, 537.097426120113], [1.57769256E12, 311.04089076598126], [1.57769166E12, 193.0234986945174], [1.57769388E12, 125.59688617715098], [1.57769358E12, 826.9428357930133], [1.57769196E12, 509.90725504861865], [1.57769376E12, 390.2895142636867], [1.57769346E12, 1060.5282242990625], [1.57769184E12, 305.7489646084329], [1.57769286E12, 937.6412084818938], [1.57769154E12, 200.63997005988028], [1.57769316E12, 1103.5576131687199], [1.57769178E12, 47.68975770925123], [1.57769148E12, 183.69509913954403], [1.5776937E12, 590.4063956740612], [1.57769208E12, 533.0518490278295], [1.5776931E12, 1070.3122974261203], [1.5776934E12, 1112.6101758323975], [1.57769298E12, 1116.6421889616433], [1.57769328E12, 1037.2052769461081], [1.57769238E12, 516.0353800074835], [1.57769136E12, 20.403760356915207], [1.57769268E12, 49.37311435523114], [1.57769322E12, 1073.2268813178603], [1.57769352E12, 991.399807135969], [1.57769262E12, 163.73991031390108], [1.5776916E12, 190.07558488302283], [1.5776913E12, 20.005625879043603], [1.57769292E12, 1077.0336763330238], [1.5776925E12, 425.69775280898864], [1.5776928E12, 414.95321524836413], [1.5776919E12, 509.46441281138607], [1.5776922E12, 508.2227630101104], [1.57769382E12, 295.0010583028689], [1.57769274E12, 63.19201807228918], [1.57769304E12, 1068.4102709873034], [1.57769214E12, 523.2898035547241], [1.57769244E12, 519.6313527653199], [1.57769202E12, 522.4196144488114], [1.57769232E12, 516.2505822981368], [1.57769394E12, 41.695850780358015], [1.57769142E12, 168.9143070044703], [1.57769334E12, 1065.203399433423], [1.57769172E12, 160.88591417910402], [1.57769364E12, 707.4627729053901]], "isOverall": false, "label": "home-13", "isController": true}, {"data": [[1.57769226E12, 33.832680363115195], [1.57769256E12, 34.46339818917332], [1.57769166E12, 23.543182242119], [1.57769388E12, 53.43802698145029], [1.57769358E12, 27.487832272557025], [1.57769196E12, 27.646035901271528], [1.57769376E12, 43.92246040942438], [1.57769346E12, 30.53732460243212], [1.57769184E12, 39.556151746210986], [1.57769286E12, 32.09342463183546], [1.57769154E12, 24.493592741558338], [1.57769316E12, 30.90575035063115], [1.57769178E12, 19.01147902869761], [1.57769148E12, 23.922832288841207], [1.5776937E12, 26.014303075628607], [1.57769208E12, 41.08408007626314], [1.5776931E12, 30.080663615560564], [1.5776934E12, 29.752991772625276], [1.57769298E12, 29.228616881901576], [1.57769328E12, 30.811751497006], [1.57769238E12, 28.820044918585097], [1.57769136E12, 16.2786832853947], [1.57769268E12, 19.81067251461984], [1.57769322E12, 34.42201834862404], [1.57769352E12, 63.367098395515114], [1.57769262E12, 25.001869683088735], [1.5776916E12, 33.15113954418241], [1.5776913E12, 16.251404494382022], [1.57769292E12, 32.13903443113776], [1.5776925E12, 43.67753114170672], [1.5776928E12, 43.43939539809378], [1.5776919E12, 28.016387302181844], [1.5776922E12, 28.564522161960014], [1.57769382E12, 34.27622445044367], [1.57769274E12, 20.016622591613146], [1.57769304E12, 63.732083688346], [1.57769214E12, 28.423130906709115], [1.57769244E12, 28.94252012731684], [1.57769202E12, 28.349120179707878], [1.57769232E12, 49.21743341404366], [1.57769394E12, 29.465142857143007], [1.57769142E12, 24.03380517787299], [1.57769334E12, 51.68719304873422], [1.57769172E12, 22.93619803829986], [1.57769364E12, 26.58285019637183]], "isOverall": false, "label": "login-23", "isController": false}, {"data": [[1.57769226E12, 23.993305279265495], [1.57769256E12, 24.225669685873942], [1.57769166E12, 16.480320835664948], [1.57769388E12, 34.705039004849425], [1.57769358E12, 19.059374414684388], [1.57769196E12, 19.49008975317871], [1.57769376E12, 29.315047324705436], [1.57769346E12, 20.675958840037413], [1.57769184E12, 26.324985878365585], [1.57769286E12, 20.836210131332162], [1.57769154E12, 17.17826412270849], [1.57769316E12, 19.80983545250566], [1.57769178E12, 13.093177301832647], [1.57769148E12, 17.065469509913942], [1.5776937E12, 17.83358264771875], [1.57769208E12, 27.058352402745992], [1.5776931E12, 20.82551487414191], [1.5776934E12, 19.63706058339574], [1.57769298E12, 20.32634338138925], [1.57769328E12, 21.151946107784504], [1.57769238E12, 20.576534431137684], [1.57769136E12, 10.828005115089505], [1.57769268E12, 13.849622227638308], [1.57769322E12, 23.59558135180671], [1.57769352E12, 41.39957471486562], [1.57769262E12, 17.146195550570223], [1.5776916E12, 22.546981207517003], [1.5776913E12, 10.66011235955056], [1.57769292E12, 21.295097305389156], [1.5776925E12, 28.690694626474397], [1.5776928E12, 28.46361185983829], [1.5776919E12, 19.984456928839002], [1.5776922E12, 19.65706806282721], [1.57769382E12, 23.118974161203216], [1.57769274E12, 15.408163265306134], [1.57769304E12, 40.89210675752413], [1.57769214E12, 19.572604790419227], [1.57769244E12, 20.492319220681924], [1.57769202E12, 20.03257207038561], [1.57769232E12, 32.946573751451844], [1.57769394E12, 19.047220106626053], [1.57769142E12, 16.695976154992575], [1.57769334E12, 32.054401208915756], [1.57769172E12, 15.883243041285287], [1.57769364E12, 17.852682744438283]], "isOverall": false, "label": "login-24", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57769394E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 10.587078651685397, "minX": 1.5776913E12, "maxY": 259.72598067083527, "series": [{"data": [[1.57769226E12, 128.63851286939914], [1.57769256E12, 85.67268189671707], [1.57769166E12, 59.07105557627776], [1.57769388E12, 71.80138859667557], [1.57769358E12, 194.90080328787562], [1.57769196E12, 119.81712789827982], [1.57769376E12, 115.32729375481922], [1.57769346E12, 205.81457943925201], [1.57769184E12, 96.13874246987976], [1.57769286E12, 192.74948395571457], [1.57769154E12, 61.76160179640694], [1.57769316E12, 204.7798353909466], [1.57769178E12, 25.286343612334857], [1.57769148E12, 56.30359147025813], [1.5776937E12, 120.32108894275603], [1.57769208E12, 142.3191002668703], [1.5776931E12, 228.6062917063871], [1.5776934E12, 205.42349420127192], [1.57769298E12, 190.49354536950406], [1.57769328E12, 205.23933383233594], [1.57769238E12, 120.03219767877208], [1.57769136E12, 16.892288081580602], [1.57769268E12, 24.001459854014563], [1.57769322E12, 220.26656682890328], [1.57769352E12, 228.42526518804235], [1.57769262E12, 57.28550074738429], [1.5776916E12, 70.60627874425091], [1.5776913E12, 16.587904360056296], [1.57769292E12, 199.9796071094488], [1.5776925E12, 126.51573033707888], [1.5776928E12, 118.65710435117457], [1.5776919E12, 118.39351938565224], [1.5776922E12, 125.47285660801187], [1.57769382E12, 80.97248412545714], [1.57769274E12, 30.914156626506017], [1.57769304E12, 259.72598067083527], [1.57769214E12, 129.2435921421889], [1.57769244E12, 116.68946188340843], [1.57769202E12, 127.28841474826841], [1.57769232E12, 153.7090450310559], [1.57769394E12, 32.38256566425582], [1.57769142E12, 55.85897913561822], [1.57769334E12, 221.83078375826264], [1.57769172E12, 55.058208955223904], [1.57769364E12, 129.531069229335]], "isOverall": false, "label": "home-13", "isController": true}, {"data": [[1.57769226E12, 33.70148112756805], [1.57769256E12, 34.25804276632647], [1.57769166E12, 23.301343033016238], [1.57769388E12, 53.3125000000001], [1.57769358E12, 27.31486334706107], [1.57769196E12, 27.504674644727057], [1.57769376E12, 43.795963692545335], [1.57769346E12, 30.379981290926096], [1.57769184E12, 39.31205874046873], [1.57769286E12, 31.900103179814362], [1.57769154E12, 24.350575250210625], [1.57769316E12, 30.7111734455354], [1.57769178E12, 18.89437086092705], [1.57769148E12, 23.70096342718175], [1.5776937E12, 25.85136019444696], [1.57769208E12, 40.838131553860606], [1.5776931E12, 29.71414950419522], [1.5776934E12, 29.608451757666366], [1.57769298E12, 29.01946472019461], [1.57769328E12, 30.581306137724496], [1.57769238E12, 28.655624181171714], [1.57769136E12, 16.22307446468519], [1.57769268E12, 19.71552144249511], [1.57769322E12, 34.26231042875855], [1.57769352E12, 61.91281654745827], [1.57769262E12, 24.813031691128234], [1.5776916E12, 32.840363854458246], [1.5776913E12, 16.169943820224734], [1.57769292E12, 31.95462200598791], [1.5776925E12, 43.3315538072493], [1.5776928E12, 43.11081159141229], [1.5776919E12, 27.82657552205257], [1.5776922E12, 28.434449223863897], [1.57769382E12, 34.150694176629415], [1.57769274E12, 19.935776350585567], [1.57769304E12, 63.32841048944422], [1.57769214E12, 28.176569664077913], [1.57769244E12, 28.790675903388845], [1.57769202E12, 28.195245226507], [1.57769232E12, 49.0269249394675], [1.57769394E12, 29.387809523809548], [1.57769142E12, 23.874371391320555], [1.57769334E12, 51.32291273139412], [1.57769172E12, 22.773843998131635], [1.57769364E12, 26.420516177295706]], "isOverall": false, "label": "login-23", "isController": false}, {"data": [[1.57769226E12, 23.915072685539393], [1.57769256E12, 24.01715166698783], [1.57769166E12, 16.370453273642934], [1.57769388E12, 34.610162344507664], [1.57769358E12, 18.93556845851283], [1.57769196E12, 19.396596858638805], [1.57769376E12, 29.243770523469202], [1.57769346E12, 20.556594948550092], [1.57769184E12, 26.19544341931847], [1.57769286E12, 20.68742964352717], [1.57769154E12, 17.093901982790896], [1.57769316E12, 19.619670905011215], [1.57769178E12, 13.017001545595036], [1.57769148E12, 16.885895997007125], [1.5776937E12, 17.724943904263256], [1.57769208E12, 26.826468344775005], [1.5776931E12, 20.673340961098344], [1.5776934E12, 19.542071802542992], [1.57769298E12, 20.14753791424823], [1.57769328E12, 21.044161676646812], [1.57769238E12, 20.45845808383243], [1.57769136E12, 10.793478260869577], [1.57769268E12, 13.791372166707289], [1.57769322E12, 23.48286837670849], [1.57769352E12, 40.56659578581097], [1.57769262E12, 17.06580669283979], [1.5776916E12, 22.34726109556172], [1.5776913E12, 10.587078651685397], [1.57769292E12, 21.20303143712583], [1.5776925E12, 28.31922860887475], [1.5776928E12, 28.37216018482862], [1.5776919E12, 19.782771535580448], [1.5776922E12, 19.570493642483207], [1.57769382E12, 23.020632472040113], [1.57769274E12, 15.340136054421773], [1.57769304E12, 40.80011357183419], [1.57769214E12, 19.469124251496996], [1.57769244E12, 20.37804421131508], [1.57769202E12, 19.941220516660493], [1.57769232E12, 32.79345722028664], [1.57769394E12, 19.009520182787544], [1.57769142E12, 16.60059612518633], [1.57769334E12, 31.950510011333616], [1.57769172E12, 15.778815617410793], [1.57769364E12, 17.748738081884483]], "isOverall": false, "label": "login-24", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57769394E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5776913E12, "maxY": 35.00397953382614, "series": [{"data": [[1.57769226E12, 13.601143946615863], [1.57769256E12, 17.45728546746018], [1.57769166E12, 10.521820216337195], [1.57769388E12, 28.23500946770471], [1.57769358E12, 10.970110218569005], [1.57769196E12, 12.371914734480166], [1.57769376E12, 22.277178103315386], [1.57769346E12, 9.893644859813126], [1.57769184E12, 18.592996987951782], [1.57769286E12, 11.178832801651312], [1.57769154E12, 11.658308383233557], [1.57769316E12, 12.913019079685778], [1.57769178E12, 9.301321585903066], [1.57769148E12, 10.30882903105128], [1.5776937E12, 11.603766548573535], [1.57769208E12, 19.39477697293183], [1.5776931E12, 12.00114394661579], [1.5776934E12, 11.648522259633404], [1.57769298E12, 11.392142188961698], [1.57769328E12, 11.529191616766466], [1.57769238E12, 12.080307001123186], [1.57769136E12, 7.243467176545573], [1.57769268E12, 8.915571776155723], [1.57769322E12, 13.439535754399124], [1.57769352E12, 30.16779170684669], [1.57769262E12, 11.70254110612854], [1.5776916E12, 15.777644471105722], [1.5776913E12, 7.059071729957799], [1.57769292E12, 11.9378858746492], [1.5776925E12, 19.119475655430687], [1.5776928E12, 22.109356950327356], [1.5776919E12, 11.625023412624106], [1.5776922E12, 12.738487457880922], [1.57769382E12, 15.870117375408899], [1.57769274E12, 9.771084337349393], [1.57769304E12, 35.00397953382614], [1.57769214E12, 12.11898971000932], [1.57769244E12, 11.720852017937204], [1.57769202E12, 11.141493542953368], [1.57769232E12, 26.37616459627336], [1.57769394E12, 14.417205938332717], [1.57769142E12, 11.826005961251893], [1.57769334E12, 24.500849858356887], [1.57769172E12, 11.720522388059702], [1.57769364E12, 10.980033588356044]], "isOverall": false, "label": "home-13", "isController": true}, {"data": [[1.57769226E12, 0.5896798853320588], [1.57769256E12, 0.28298979002119024], [1.57769166E12, 0.058104831188211345], [1.57769388E12, 0.34875632377740445], [1.57769358E12, 0.5230250842381153], [1.57769196E12, 0.30516080777860966], [1.57769376E12, 0.6149092313634671], [1.57769346E12, 1.233676333021513], [1.57769184E12, 0.7313376635602005], [1.57769286E12, 0.805177750680051], [1.57769154E12, 0.06884295201571411], [1.57769316E12, 1.2701262272089764], [1.57769178E12, 0.0], [1.57769148E12, 0.07183612384248428], [1.5776937E12, 0.5094886416752362], [1.57769208E12, 0.8075309818875178], [1.5776931E12, 1.079710144927535], [1.5776934E12, 0.69942034405385], [1.57769298E12, 1.0583005801983965], [1.57769328E12, 1.430482784431142], [1.57769238E12, 0.3159273816208134], [1.57769136E12, 0.0], [1.57769268E12, 0.0], [1.57769322E12, 1.472570679648008], [1.57769352E12, 2.7022037502416407], [1.57769262E12, 0.04954660185098615], [1.5776916E12, 0.22311075569772057], [1.5776913E12, 0.0], [1.57769292E12, 1.6327657185628788], [1.5776925E12, 0.84705441603446], [1.5776928E12, 1.1939924906132628], [1.5776919E12, 0.3045228954021912], [1.5776922E12, 0.3362633252290983], [1.57769382E12, 0.4737755495564969], [1.57769274E12, 0.0], [1.57769304E12, 3.776199943197966], [1.57769214E12, 0.5292411340881462], [1.57769244E12, 0.5076764650814469], [1.57769202E12, 0.47865967802321463], [1.57769232E12, 1.9339467312348626], [1.57769394E12, 0.0], [1.57769142E12, 0.04656360588563974], [1.57769334E12, 3.7735171892708723], [1.57769172E12, 0.055488089677720856], [1.57769364E12, 0.7319992519169646]], "isOverall": false, "label": "login-23", "isController": false}, {"data": [[1.57769226E12, 0.03347360367253252], [1.57769256E12, 0.023896704567353967], [1.57769166E12, 0.0013057265435553122], [1.57769388E12, 0.164242040902383], [1.57769358E12, 0.0], [1.57769196E12, 0.0014958863126402352], [1.57769376E12, 0.0], [1.57769346E12, 0.00149672591206735], [1.57769184E12, 0.05629824891734134], [1.57769286E12, 0.006378986866791745], [1.57769154E12, 0.0], [1.57769316E12, 0.0014958863126402354], [1.57769178E12, 0.0], [1.57769148E12, 0.0], [1.5776937E12, 0.0026178010471204294], [1.57769208E12, 0.049008390541571134], [1.5776931E12, 0.0019069412662090016], [1.5776934E12, 0.002056843679880328], [1.57769298E12, 0.001872308556450103], [1.57769328E12, 0.002806886227544909], [1.57769238E12, 0.0029940119760479], [1.57769136E12, 0.0], [1.57769268E12, 0.0], [1.57769322E12, 0.0], [1.57769352E12, 0.7981828726077715], [1.57769262E12, 0.0], [1.5776916E12, 0.003198720511795291], [1.5776913E12, 0.0], [1.57769292E12, 0.0031811377245509038], [1.5776925E12, 0.09230481183299005], [1.5776928E12, 0.1624951867539474], [1.5776919E12, 0.0], [1.5776922E12, 0.0], [1.57769382E12, 0.0], [1.57769274E12, 0.0], [1.57769304E12, 0.23982585652091631], [1.57769214E12, 0.0014970059880239494], [1.57769244E12, 0.0], [1.57769202E12, 0.0011231748408835661], [1.57769232E12, 0.30197444831591186], [1.57769394E12, 0.0], [1.57769142E12, 0.0], [1.57769334E12, 0.22818284850774492], [1.57769172E12, 0.002241733607322997], [1.57769364E12, 0.0]], "isOverall": false, "label": "login-24", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57769394E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 6.0, "minX": 1.5776913E12, "maxY": 57451.0, "series": [{"data": [[1.57769226E12, 26660.0], [1.57769256E12, 27347.0], [1.57769166E12, 26624.0], [1.57769388E12, 29131.0], [1.57769358E12, 53189.0], [1.57769196E12, 53315.0], [1.57769376E12, 52271.0], [1.57769346E12, 54374.0], [1.57769184E12, 26736.0], [1.57769286E12, 53217.0], [1.57769154E12, 53372.0], [1.57769316E12, 54360.0], [1.57769178E12, 1626.0], [1.57769148E12, 26151.0], [1.5776937E12, 27853.0], [1.57769208E12, 27046.0], [1.5776931E12, 53235.0], [1.5776934E12, 53321.0], [1.57769298E12, 57451.0], [1.57769328E12, 53486.0], [1.57769238E12, 32903.0], [1.57769136E12, 40.0], [1.57769268E12, 1632.0], [1.57769322E12, 54373.0], [1.57769352E12, 53185.0], [1.57769262E12, 13304.0], [1.5776916E12, 13458.0], [1.5776913E12, 34.0], [1.57769292E12, 54246.0], [1.5776925E12, 54362.0], [1.5776928E12, 26643.0], [1.5776919E12, 27701.0], [1.5776922E12, 53349.0], [1.57769382E12, 53297.0], [1.57769274E12, 1717.0], [1.57769304E12, 54405.0], [1.57769214E12, 27899.0], [1.57769244E12, 53372.0], [1.57769202E12, 53305.0], [1.57769232E12, 53392.0], [1.57769394E12, 935.0], [1.57769142E12, 13176.0], [1.57769334E12, 55424.0], [1.57769172E12, 26532.0], [1.57769364E12, 54288.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57769226E12, 7.0], [1.57769256E12, 7.0], [1.57769166E12, 7.0], [1.57769388E12, 8.0], [1.57769358E12, 7.0], [1.57769196E12, 7.0], [1.57769376E12, 7.0], [1.57769346E12, 7.0], [1.57769184E12, 7.0], [1.57769286E12, 7.0], [1.57769154E12, 7.0], [1.57769316E12, 7.0], [1.57769178E12, 7.0], [1.57769148E12, 7.0], [1.5776937E12, 7.0], [1.57769208E12, 7.0], [1.5776931E12, 7.0], [1.5776934E12, 7.0], [1.57769298E12, 7.0], [1.57769328E12, 7.0], [1.57769238E12, 7.0], [1.57769136E12, 7.0], [1.57769268E12, 7.0], [1.57769322E12, 7.0], [1.57769352E12, 7.0], [1.57769262E12, 7.0], [1.5776916E12, 7.0], [1.5776913E12, 8.0], [1.57769292E12, 7.0], [1.5776925E12, 7.0], [1.5776928E12, 6.0], [1.5776919E12, 7.0], [1.5776922E12, 7.0], [1.57769382E12, 7.0], [1.57769274E12, 7.0], [1.57769304E12, 7.0], [1.57769214E12, 7.0], [1.57769244E12, 7.0], [1.57769202E12, 7.0], [1.57769232E12, 7.0], [1.57769394E12, 7.0], [1.57769142E12, 7.0], [1.57769334E12, 7.0], [1.57769172E12, 7.0], [1.57769364E12, 7.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57769226E12, 275.0], [1.57769256E12, 256.0], [1.57769166E12, 211.0], [1.57769388E12, 132.0], [1.57769358E12, 300.0], [1.57769196E12, 266.0], [1.57769376E12, 264.60000000000036], [1.57769346E12, 331.0], [1.57769184E12, 258.0], [1.57769286E12, 331.0], [1.57769154E12, 213.0], [1.57769316E12, 337.89999999999964], [1.57769178E12, 27.0], [1.57769148E12, 68.0], [1.5776937E12, 267.0], [1.57769208E12, 276.0], [1.5776931E12, 339.0], [1.5776934E12, 337.0], [1.57769298E12, 336.0], [1.57769328E12, 339.0], [1.57769238E12, 264.0], [1.57769136E12, 21.0], [1.57769268E12, 31.0], [1.57769322E12, 344.0], [1.57769352E12, 485.8000000000011], [1.57769262E12, 67.0], [1.5776916E12, 233.0], [1.5776913E12, 21.0], [1.57769292E12, 342.0], [1.5776925E12, 262.0], [1.5776928E12, 272.0], [1.5776919E12, 267.0], [1.5776922E12, 267.0], [1.57769382E12, 254.0], [1.57769274E12, 40.40000000000009], [1.57769304E12, 441.7000000000007], [1.57769214E12, 266.0], [1.57769244E12, 267.0], [1.57769202E12, 263.0], [1.57769232E12, 284.0], [1.57769394E12, 39.0], [1.57769142E12, 64.0], [1.57769334E12, 420.2000000000007], [1.57769172E12, 63.0], [1.57769364E12, 272.10000000000036]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57769226E12, 3217.0], [1.57769256E12, 1603.1000000000004], [1.57769166E12, 809.0], [1.57769388E12, 733.0], [1.57769358E12, 4200.019999999809], [1.57769196E12, 3182.619999999999], [1.57769376E12, 1667.5599999999995], [1.57769346E12, 6519.0], [1.57769184E12, 1607.6399999999994], [1.57769286E12, 6508.0], [1.57769154E12, 1135.5599999999977], [1.57769316E12, 6516.0], [1.57769178E12, 279.0], [1.57769148E12, 813.859999999997], [1.5776937E12, 3216.9799999999996], [1.57769208E12, 3210.0700000000015], [1.5776931E12, 6552.0], [1.5776934E12, 6514.0], [1.57769298E12, 6548.93], [1.57769328E12, 6518.889999999999], [1.57769238E12, 3194.75], [1.57769136E12, 27.0], [1.57769268E12, 282.0], [1.57769322E12, 6515.969999999999], [1.57769352E12, 6511.879999999999], [1.57769262E12, 801.0], [1.5776916E12, 854.3400000000056], [1.5776913E12, 23.0], [1.57769292E12, 6514.9400000000005], [1.5776925E12, 1766.350000000004], [1.5776928E12, 3170.1900000000005], [1.5776919E12, 3182.0], [1.5776922E12, 3223.949999999999], [1.57769382E12, 1515.0], [1.57769274E12, 310.2399999999998], [1.57769304E12, 6589.540000000001], [1.57769214E12, 3233.0], [1.57769244E12, 3209.100000000002], [1.57769202E12, 3179.540000000001], [1.57769232E12, 3183.0], [1.57769394E12, 292.880000000001], [1.57769142E12, 806.9400000000005], [1.57769334E12, 6513.42], [1.57769172E12, 802.3400000000001], [1.57769364E12, 3253.6100000000006]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57769226E12, 693.0], [1.57769256E12, 341.5], [1.57769166E12, 292.0], [1.57769388E12, 266.0], [1.57769358E12, 793.0], [1.57769196E12, 694.0], [1.57769376E12, 466.3999999999978], [1.57769346E12, 805.5], [1.57769184E12, 378.3999999999978], [1.57769286E12, 811.0], [1.57769154E12, 293.0], [1.57769316E12, 1133.499999999989], [1.57769178E12, 52.0], [1.57769148E12, 277.0], [1.5776937E12, 691.0], [1.57769208E12, 694.0], [1.5776931E12, 894.5], [1.5776934E12, 1113.3999999999287], [1.57769298E12, 1165.7999999999884], [1.57769328E12, 833.2499999999945], [1.57769238E12, 679.0], [1.57769136E12, 22.0], [1.57769268E12, 54.0], [1.57769322E12, 1069.8999999999978], [1.57769352E12, 1235.7999999999956], [1.57769262E12, 270.0], [1.5776916E12, 301.0], [1.5776913E12, 22.0], [1.57769292E12, 1475.0], [1.5776925E12, 664.25], [1.5776928E12, 677.0], [1.5776919E12, 686.0], [1.5776922E12, 682.0], [1.57769382E12, 336.0], [1.57769274E12, 59.0], [1.57769304E12, 1251.4999999999854], [1.57769214E12, 696.5499999999993], [1.57769244E12, 681.0], [1.57769202E12, 674.8499999999985], [1.57769232E12, 684.2999999999993], [1.57769394E12, 59.0], [1.57769142E12, 273.0], [1.57769334E12, 1073.0999999999985], [1.57769172E12, 272.0], [1.57769364E12, 699.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57769394E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 11.0, "minX": 20.0, "maxY": 44470.0, "series": [{"data": [[20.0, 13.0], [21.0, 322.0], [24.0, 40.5], [25.0, 335.0], [27.0, 396.0], [29.0, 237.0], [30.0, 13.0], [31.0, 13.0], [33.0, 12.0], [36.0, 12.0], [37.0, 20.0], [39.0, 11.0], [41.0, 202.0], [43.0, 18.0], [45.0, 253.0], [46.0, 239.5], [51.0, 275.0], [55.0, 266.0], [57.0, 48.0], [58.0, 264.0], [63.0, 197.0], [65.0, 12.0], [67.0, 17.0], [66.0, 13.0], [69.0, 11.0], [71.0, 11.0], [68.0, 66.5], [70.0, 11.0], [72.0, 11.0], [73.0, 11.0], [74.0, 17.0], [75.0, 11.0], [77.0, 291.0], [79.0, 330.5], [85.0, 291.0], [90.0, 214.0], [89.0, 260.0], [97.0, 13.0], [99.0, 155.0], [103.0, 271.0], [101.0, 271.0], [106.0, 22.0], [107.0, 30.0], [110.0, 11.0], [109.0, 11.0], [113.0, 283.0], [119.0, 229.0], [123.0, 237.5], [121.0, 19.0], [122.0, 44.0], [126.0, 14.0], [124.0, 17.0], [125.0, 98.0], [131.0, 246.0], [132.0, 220.0], [133.0, 238.0], [143.0, 18.0], [142.0, 112.0], [138.0, 70.5], [140.0, 96.0], [137.0, 139.0], [141.0, 11.0], [146.0, 13.0], [145.0, 112.0], [148.0, 200.5], [147.0, 37.0], [144.0, 11.0], [156.0, 192.0], [154.0, 229.0], [155.0, 259.0], [152.0, 25.0], [165.0, 13.0], [166.0, 161.0], [163.0, 210.0], [162.0, 68.5], [171.0, 12.0], [175.0, 11.0], [173.0, 186.0], [174.0, 32.0], [179.0, 24.0], [183.0, 111.0], [176.0, 79.0], [180.0, 237.0], [182.0, 31.0], [186.0, 196.0], [187.0, 26.0], [184.0, 226.0], [185.0, 52.0], [196.0, 37.0], [195.0, 212.5], [199.0, 32.0], [203.0, 12.0], [207.0, 26.0], [202.0, 12.0], [200.0, 13.0], [201.0, 13.0], [205.0, 12.0], [204.0, 11.0], [208.0, 11.0], [212.0, 133.0], [209.0, 55.0], [215.0, 12.0], [210.0, 235.0], [211.0, 16.0], [222.0, 231.5], [226.0, 24.0], [231.0, 20.0], [225.0, 93.0], [224.0, 62.0], [230.0, 12.5], [234.0, 12.0], [232.0, 40.0], [239.0, 11.0], [233.0, 12.0], [238.0, 12.0], [235.0, 12.0], [241.0, 20.0], [247.0, 17.0], [242.0, 25.5], [240.0, 125.0], [255.0, 12.0], [251.0, 12.0], [254.0, 12.0], [248.0, 12.0], [249.0, 12.0], [253.0, 12.0], [250.0, 12.0], [252.0, 19.0], [270.0, 12.0], [262.0, 12.0], [261.0, 12.0], [260.0, 12.0], [263.0, 12.0], [266.0, 12.0], [267.0, 12.0], [265.0, 12.0], [269.0, 12.0], [264.0, 12.0], [271.0, 12.0], [268.0, 12.0], [259.0, 12.0], [258.0, 12.0], [256.0, 12.0], [257.0, 12.0], [273.0, 12.0], [285.0, 15.0], [284.0, 12.0], [278.0, 14.0], [275.0, 12.0], [277.0, 12.0], [272.0, 12.0], [279.0, 12.0], [274.0, 12.0], [276.0, 12.0], [280.0, 12.0], [286.0, 18.0], [282.0, 12.0], [283.0, 13.0], [281.0, 12.0], [293.0, 13.0], [301.0, 33.0], [303.0, 17.0], [288.0, 14.0], [309.0, 21.5], [319.0, 15.0], [312.0, 17.0], [317.0, 66.0], [308.0, 41.0], [305.0, 15.0], [311.0, 14.0], [332.0, 14.0], [330.0, 14.0], [322.0, 15.0], [324.0, 35.5], [341.0, 50.0], [351.0, 67.0], [349.0, 29.0], [342.0, 14.0], [336.0, 103.0], [344.0, 21.0], [350.0, 18.0], [364.0, 22.0], [354.0, 66.0], [371.0, 15.0], [377.0, 80.0], [368.0, 16.0], [379.0, 32.0], [389.0, 88.0], [387.0, 22.0], [385.0, 22.0], [407.0, 38.0], [406.0, 78.0], [425.0, 76.0], [422.0, 49.0], [416.0, 39.0], [423.0, 17.0], [447.0, 83.0], [439.0, 48.0], [435.0, 21.0], [459.0, 79.0], [452.0, 25.0], [468.0, 109.0], [486.0, 31.0], [507.0, 105.0], [551.0, 119.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[154.0, 33156.0], [180.0, 33188.0], [186.0, 43482.0], [215.0, 44470.0], [210.0, 43439.0], [253.0, 33234.5], [252.0, 36726.5], [254.0, 30667.5], [255.0, 36497.0], [269.0, 32067.0], [256.0, 33195.0], [264.0, 30294.0], [260.0, 31128.0], [261.0, 31511.5], [265.0, 32932.0], [263.0, 34898.0], [266.0, 33144.0], [270.0, 33174.0], [271.0, 31624.0], [262.0, 31487.0], [267.0, 30706.0], [268.0, 34837.0], [257.0, 30482.0], [258.0, 33206.0], [259.0, 30702.0], [274.0, 31483.0], [278.0, 30685.5], [272.0, 33215.0], [276.0, 30668.0], [275.0, 30315.0], [280.0, 30009.0], [273.0, 30663.5], [282.0, 31587.0], [283.0, 30712.5], [277.0, 39821.0], [279.0, 43731.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 551.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 20.0, "maxY": 14423.0, "series": [{"data": [[20.0, 13.0], [21.0, 322.0], [24.0, 37.0], [25.0, 335.0], [27.0, 312.0], [29.0, 237.0], [30.0, 13.0], [31.0, 13.0], [33.0, 12.0], [36.0, 12.0], [37.0, 16.0], [39.0, 11.0], [41.0, 202.0], [43.0, 15.0], [45.0, 249.0], [46.0, 235.5], [51.0, 275.0], [55.0, 266.0], [57.0, 48.0], [58.0, 263.0], [63.0, 197.0], [65.0, 12.0], [67.0, 15.0], [66.0, 13.0], [69.0, 11.0], [71.0, 11.0], [68.0, 22.0], [70.0, 11.0], [72.0, 11.0], [73.0, 11.0], [74.0, 14.0], [75.0, 11.0], [77.0, 291.0], [79.0, 328.5], [85.0, 290.0], [90.0, 214.0], [89.0, 256.0], [97.0, 13.0], [99.0, 154.0], [103.0, 271.0], [101.0, 270.0], [106.0, 19.0], [107.0, 28.0], [110.0, 11.0], [109.0, 11.0], [113.0, 279.0], [119.0, 229.0], [123.0, 233.0], [121.0, 17.0], [122.0, 42.0], [126.0, 14.0], [124.0, 15.5], [125.0, 97.0], [131.0, 246.0], [132.0, 214.0], [133.0, 237.0], [143.0, 15.0], [142.0, 110.5], [138.0, 21.5], [140.0, 22.5], [137.0, 136.0], [141.0, 11.0], [146.0, 13.0], [145.0, 32.0], [148.0, 197.0], [147.0, 35.0], [144.0, 11.0], [156.0, 188.0], [154.0, 228.0], [155.0, 259.0], [152.0, 18.5], [165.0, 13.0], [166.0, 159.5], [163.0, 210.0], [162.0, 56.5], [171.0, 12.0], [175.0, 11.0], [173.0, 177.0], [174.0, 30.0], [179.0, 19.0], [183.0, 91.0], [176.0, 24.5], [180.0, 235.0], [182.0, 30.5], [186.0, 162.0], [187.0, 21.0], [184.0, 224.0], [185.0, 50.0], [196.0, 19.0], [195.0, 211.0], [199.0, 30.0], [203.0, 12.0], [207.0, 21.0], [202.0, 12.0], [200.0, 13.0], [201.0, 13.0], [205.0, 12.0], [204.0, 11.0], [208.0, 11.0], [212.0, 132.0], [209.0, 49.0], [215.0, 12.0], [210.0, 233.0], [211.0, 15.0], [222.0, 231.5], [226.0, 22.0], [231.0, 17.0], [225.0, 72.0], [224.0, 58.5], [230.0, 12.5], [234.0, 12.0], [232.0, 35.0], [239.0, 11.0], [233.0, 12.0], [238.0, 12.0], [235.0, 12.0], [241.0, 18.0], [247.0, 15.0], [242.0, 19.0], [240.0, 125.0], [255.0, 12.0], [251.0, 12.0], [254.0, 12.0], [248.0, 12.0], [249.0, 12.0], [253.0, 12.0], [250.0, 12.0], [252.0, 16.0], [270.0, 12.0], [262.0, 12.0], [261.0, 12.0], [260.0, 12.0], [263.0, 12.0], [266.0, 12.0], [267.0, 12.0], [265.0, 12.0], [269.0, 12.0], [264.0, 12.0], [271.0, 12.0], [268.0, 12.0], [259.0, 12.0], [258.0, 12.0], [256.0, 12.0], [257.0, 12.0], [273.0, 12.0], [285.0, 14.0], [284.0, 12.0], [278.0, 13.0], [275.0, 12.0], [277.0, 12.0], [272.0, 12.0], [279.0, 12.0], [274.0, 12.0], [276.0, 12.0], [280.0, 12.0], [286.0, 17.0], [282.0, 12.0], [283.0, 13.0], [281.0, 12.0], [293.0, 13.0], [301.0, 31.0], [303.0, 16.0], [288.0, 14.0], [309.0, 19.0], [319.0, 14.0], [312.0, 15.0], [317.0, 58.0], [308.0, 38.0], [305.0, 15.0], [311.0, 14.0], [332.0, 14.0], [330.0, 14.0], [322.0, 15.0], [324.0, 30.0], [341.0, 45.0], [351.0, 64.0], [349.0, 26.0], [342.0, 14.0], [336.0, 103.0], [344.0, 19.0], [350.0, 17.0], [364.0, 20.0], [354.0, 65.0], [371.0, 15.0], [377.0, 80.0], [368.0, 15.0], [379.0, 32.0], [389.0, 87.0], [387.0, 21.0], [385.0, 21.0], [407.0, 35.0], [406.0, 77.5], [425.0, 75.0], [422.0, 48.0], [416.0, 38.0], [423.0, 17.0], [447.0, 82.0], [439.0, 48.0], [435.0, 21.0], [459.0, 79.0], [452.0, 24.0], [468.0, 108.0], [486.0, 30.0], [507.0, 105.0], [551.0, 119.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[154.0, 655.0], [180.0, 3094.0], [186.0, 680.0], [215.0, 14423.0], [210.0, 6639.0], [253.0, 3181.5], [252.0, 239.0], [254.0, 347.5], [255.0, 245.0], [269.0, 454.0], [256.0, 42.0], [264.0, 241.0], [260.0, 259.0], [261.0, 1058.5], [265.0, 442.0], [263.0, 1703.5], [266.0, 679.0], [270.0, 656.0], [271.0, 254.0], [262.0, 1487.0], [267.0, 645.0], [268.0, 2311.0], [257.0, 43.5], [258.0, 3154.0], [259.0, 279.0], [274.0, 255.0], [278.0, 236.5], [272.0, 261.0], [276.0, 655.0], [275.0, 139.5], [280.0, 0.0], [273.0, 240.0], [282.0, 1460.0], [283.0, 662.5], [277.0, 3433.0], [279.0, 702.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 551.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 17.8, "minX": 1.5776913E12, "maxY": 268.6666666666667, "series": [{"data": [[1.57769226E12, 261.8333333333333], [1.57769256E12, 259.6166666666667], [1.57769166E12, 268.06666666666666], [1.57769388E12, 237.15], [1.57769358E12, 267.0833333333333], [1.57769196E12, 267.4], [1.57769376E12, 258.8666666666667], [1.57769346E12, 267.25], [1.57769184E12, 266.31666666666666], [1.57769286E12, 266.9], [1.57769154E12, 267.25], [1.57769316E12, 267.35], [1.57769178E12, 226.58333333333334], [1.57769148E12, 267.28333333333336], [1.5776937E12, 267.43333333333334], [1.57769208E12, 262.26666666666665], [1.5776931E12, 262.21666666666664], [1.5776934E12, 267.3666666666667], [1.57769298E12, 267.18333333333334], [1.57769328E12, 267.2], [1.57769238E12, 267.1333333333333], [1.57769136E12, 78.38333333333334], [1.57769268E12, 205.11666666666667], [1.57769322E12, 267.06666666666666], [1.57769352E12, 258.6333333333333], [1.57769262E12, 267.3], [1.5776916E12, 250.08333333333334], [1.5776913E12, 17.8], [1.57769292E12, 267.21666666666664], [1.5776925E12, 266.76666666666665], [1.5776928E12, 260.7], [1.5776919E12, 266.96666666666664], [1.5776922E12, 267.26666666666665], [1.57769382E12, 259.28333333333336], [1.57769274E12, 66.5], [1.57769304E12, 264.0], [1.57769214E12, 267.2], [1.57769244E12, 267.18333333333334], [1.57769202E12, 267.1166666666667], [1.57769232E12, 257.95], [1.57769394E12, 131.13333333333333], [1.57769142E12, 268.6666666666667], [1.57769334E12, 264.71666666666664], [1.57769172E12, 267.6], [1.57769364E12, 267.3666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57769394E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5776913E12, "maxY": 268.4166666666667, "series": [{"data": [[1.57769226E12, 261.75], [1.57769256E12, 259.81666666666666], [1.57769166E12, 268.06666666666666], [1.57769388E12, 237.35], [1.57769358E12, 267.0833333333333], [1.57769196E12, 267.28333333333336], [1.57769376E12, 259.05], [1.57769346E12, 266.81666666666666], [1.57769184E12, 265.5833333333333], [1.57769286E12, 266.1666666666667], [1.57769154E12, 267.25], [1.57769316E12, 266.8333333333333], [1.57769178E12, 226.66666666666666], [1.57769148E12, 267.28333333333336], [1.5776937E12, 267.5], [1.57769208E12, 262.1666666666667], [1.5776931E12, 261.81666666666666], [1.5776934E12, 266.78333333333336], [1.57769298E12, 266.76666666666665], [1.57769328E12, 266.8333333333333], [1.57769238E12, 267.06666666666666], [1.57769136E12, 78.3], [1.57769268E12, 205.3], [1.57769322E12, 266.6666666666667], [1.57769352E12, 258.51666666666665], [1.57769262E12, 267.48333333333335], [1.5776916E12, 250.08333333333334], [1.5776913E12, 17.783333333333335], [1.57769292E12, 266.75], [1.5776925E12, 266.9], [1.5776928E12, 259.6666666666667], [1.5776919E12, 266.8833333333333], [1.5776922E12, 267.23333333333335], [1.57769382E12, 259.45], [1.57769274E12, 66.25], [1.57769304E12, 263.7], [1.57769214E12, 267.1333333333333], [1.57769244E12, 267.15], [1.57769202E12, 267.03333333333336], [1.57769232E12, 257.8833333333333], [1.57769394E12, 131.28333333333333], [1.57769142E12, 268.4166666666667], [1.57769334E12, 264.28333333333336], [1.57769172E12, 267.75], [1.57769364E12, 267.3]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.57769226E12, 0.08333333333333333], [1.57769256E12, 0.03333333333333333], [1.57769358E12, 0.18333333333333332], [1.57769196E12, 0.11666666666666667], [1.57769376E12, 0.016666666666666666], [1.57769346E12, 0.5166666666666667], [1.57769286E12, 0.3333333333333333], [1.57769316E12, 0.5166666666666667], [1.5776937E12, 0.16666666666666666], [1.57769208E12, 0.1], [1.5776931E12, 0.4], [1.5776934E12, 0.5833333333333334], [1.57769298E12, 0.4166666666666667], [1.57769328E12, 0.36666666666666664], [1.57769238E12, 0.06666666666666667], [1.57769322E12, 0.4], [1.57769352E12, 0.3333333333333333], [1.57769292E12, 0.4666666666666667], [1.5776925E12, 0.05], [1.5776928E12, 0.016666666666666666], [1.5776919E12, 0.08333333333333333], [1.5776922E12, 0.03333333333333333], [1.57769382E12, 0.03333333333333333], [1.57769304E12, 0.3], [1.57769214E12, 0.06666666666666667], [1.57769244E12, 0.08333333333333333], [1.57769202E12, 0.08333333333333333], [1.57769232E12, 0.06666666666666667], [1.57769142E12, 0.016666666666666666], [1.57769334E12, 0.43333333333333335], [1.57769364E12, 0.26666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57769394E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.5776913E12, "maxY": 178.96666666666667, "series": [{"data": [[1.57769226E12, 174.41666666666666], [1.57769256E12, 173.03333333333333], [1.57769166E12, 178.7], [1.57769388E12, 158.13333333333333], [1.57769358E12, 178.06666666666666], [1.57769196E12, 178.26666666666668], [1.57769376E12, 172.6], [1.57769346E12, 178.16666666666666], [1.57769184E12, 177.05], [1.57769286E12, 177.68333333333334], [1.57769154E12, 178.18333333333334], [1.57769316E12, 178.25], [1.57769178E12, 151.0], [1.57769148E12, 178.18333333333334], [1.5776937E12, 178.28333333333333], [1.57769208E12, 174.83333333333334], [1.5776931E12, 174.8], [1.5776934E12, 178.26666666666668], [1.57769298E12, 178.1], [1.57769328E12, 178.13333333333333], [1.57769238E12, 178.1], [1.57769136E12, 52.15], [1.57769268E12, 136.8], [1.57769322E12, 178.03333333333333], [1.57769352E12, 172.43333333333334], [1.57769262E12, 178.28333333333333], [1.5776916E12, 166.73333333333332], [1.5776913E12, 11.866666666666667], [1.57769292E12, 178.13333333333333], [1.5776925E12, 177.95], [1.5776928E12, 173.11666666666667], [1.5776919E12, 177.98333333333332], [1.5776922E12, 178.23333333333332], [1.57769382E12, 172.86666666666667], [1.57769274E12, 44.11666666666667], [1.57769304E12, 176.05], [1.57769214E12, 178.11666666666667], [1.57769244E12, 178.03333333333333], [1.57769202E12, 178.06666666666666], [1.57769232E12, 172.08333333333334], [1.57769394E12, 87.5], [1.57769142E12, 178.96666666666667], [1.57769334E12, 176.46666666666667], [1.57769172E12, 178.41666666666666], [1.57769364E12, 178.23333333333332]], "isOverall": false, "label": "login-23-success", "isController": false}, {"data": [[1.57769226E12, 87.13333333333334], [1.57769256E12, 86.48333333333333], [1.57769166E12, 89.35], [1.57769388E12, 79.05], [1.57769358E12, 88.98333333333333], [1.57769196E12, 89.13333333333334], [1.57769376E12, 86.28333333333333], [1.57769346E12, 89.08333333333333], [1.57769184E12, 88.51666666666667], [1.57769286E12, 88.83333333333333], [1.57769154E12, 89.1], [1.57769316E12, 89.13333333333334], [1.57769178E12, 75.48333333333333], [1.57769148E12, 89.1], [1.5776937E12, 89.13333333333334], [1.57769208E12, 87.4], [1.5776931E12, 87.4], [1.5776934E12, 89.13333333333334], [1.57769298E12, 89.01666666666667], [1.57769328E12, 89.06666666666666], [1.57769238E12, 89.06666666666666], [1.57769136E12, 26.066666666666666], [1.57769268E12, 68.38333333333334], [1.57769322E12, 89.01666666666667], [1.57769352E12, 86.21666666666667], [1.57769262E12, 89.15], [1.5776916E12, 83.36666666666666], [1.5776913E12, 5.933333333333334], [1.57769292E12, 89.06666666666666], [1.5776925E12, 89.01666666666667], [1.5776928E12, 86.56666666666666], [1.5776919E12, 89.0], [1.5776922E12, 89.13333333333334], [1.57769382E12, 86.43333333333334], [1.57769274E12, 22.05], [1.57769304E12, 88.05], [1.57769214E12, 89.06666666666666], [1.57769244E12, 88.96666666666667], [1.57769202E12, 89.03333333333333], [1.57769232E12, 86.1], [1.57769394E12, 43.766666666666666], [1.57769142E12, 89.46666666666667], [1.57769334E12, 88.23333333333333], [1.57769172E12, 89.21666666666667], [1.57769364E12, 89.15]], "isOverall": false, "label": "login-24-success", "isController": false}, {"data": [[1.57769226E12, 174.66666666666666], [1.57769256E12, 173.56666666666666], [1.57769166E12, 178.73333333333332], [1.57769388E12, 158.43333333333334], [1.57769358E12, 178.06666666666666], [1.57769196E12, 178.03333333333333], [1.57769376E12, 172.9], [1.57769346E12, 177.3], [1.57769184E12, 177.06666666666666], [1.57769286E12, 176.96666666666667], [1.57769154E12, 178.13333333333333], [1.57769316E12, 177.16666666666666], [1.57769178E12, 151.33333333333334], [1.57769148E12, 178.2], [1.5776937E12, 178.43333333333334], [1.57769208E12, 174.66666666666666], [1.5776931E12, 174.03333333333333], [1.5776934E12, 177.03333333333333], [1.57769298E12, 177.33333333333334], [1.57769328E12, 177.4], [1.57769238E12, 177.93333333333334], [1.57769136E12, 52.3], [1.57769268E12, 137.0], [1.57769322E12, 177.26666666666668], [1.57769352E12, 172.16666666666666], [1.57769262E12, 178.4], [1.5776916E12, 166.7], [1.5776913E12, 11.85], [1.57769292E12, 177.23333333333332], [1.5776925E12, 177.9], [1.5776928E12, 173.1], [1.5776919E12, 177.8], [1.5776922E12, 178.0], [1.57769382E12, 173.16666666666666], [1.57769274E12, 44.266666666666666], [1.57769304E12, 175.3], [1.57769214E12, 178.03333333333333], [1.57769244E12, 178.23333333333332], [1.57769202E12, 177.93333333333334], [1.57769232E12, 171.6], [1.57769394E12, 87.56666666666666], [1.57769142E12, 178.9], [1.57769334E12, 175.63333333333333], [1.57769172E12, 178.66666666666666], [1.57769364E12, 178.1]], "isOverall": false, "label": "home-13-success", "isController": true}, {"data": [[1.57769226E12, 0.16666666666666666], [1.57769256E12, 0.06666666666666667], [1.57769358E12, 0.36666666666666664], [1.57769196E12, 0.23333333333333334], [1.57769376E12, 0.03333333333333333], [1.57769346E12, 1.0333333333333334], [1.57769286E12, 0.6666666666666666], [1.57769316E12, 1.0333333333333334], [1.5776937E12, 0.3333333333333333], [1.57769208E12, 0.2], [1.5776931E12, 0.8], [1.5776934E12, 1.1666666666666667], [1.57769298E12, 0.8333333333333334], [1.57769328E12, 0.7333333333333333], [1.57769238E12, 0.13333333333333333], [1.57769322E12, 0.8], [1.57769352E12, 0.6666666666666666], [1.57769292E12, 0.9333333333333333], [1.5776925E12, 0.1], [1.5776928E12, 0.03333333333333333], [1.5776919E12, 0.16666666666666666], [1.5776922E12, 0.06666666666666667], [1.57769382E12, 0.06666666666666667], [1.57769304E12, 0.6], [1.57769214E12, 0.13333333333333333], [1.57769244E12, 0.16666666666666666], [1.57769202E12, 0.16666666666666666], [1.57769232E12, 0.13333333333333333], [1.57769142E12, 0.03333333333333333], [1.57769334E12, 0.8666666666666667], [1.57769364E12, 0.5333333333333333]], "isOverall": false, "label": "home-13-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57769394E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.5776913E12, "maxY": 447.3333333333333, "series": [{"data": [[1.57769226E12, 436.21666666666664], [1.57769256E12, 433.0833333333333], [1.57769166E12, 446.78333333333336], [1.57769388E12, 395.6166666666667], [1.57769358E12, 445.1166666666667], [1.57769196E12, 445.43333333333334], [1.57769376E12, 431.78333333333336], [1.57769346E12, 444.55], [1.57769184E12, 442.6333333333333], [1.57769286E12, 443.48333333333335], [1.57769154E12, 445.4166666666667], [1.57769316E12, 444.55], [1.57769178E12, 377.81666666666666], [1.57769148E12, 445.48333333333335], [1.5776937E12, 445.85], [1.57769208E12, 436.9], [1.5776931E12, 436.23333333333335], [1.5776934E12, 444.43333333333334], [1.57769298E12, 444.45], [1.57769328E12, 444.6], [1.57769238E12, 445.1], [1.57769136E12, 130.51666666666668], [1.57769268E12, 342.18333333333334], [1.57769322E12, 444.31666666666666], [1.57769352E12, 430.81666666666666], [1.57769262E12, 445.8333333333333], [1.5776916E12, 416.8], [1.5776913E12, 29.65], [1.57769292E12, 444.43333333333334], [1.5776925E12, 444.8666666666667], [1.5776928E12, 432.78333333333336], [1.5776919E12, 444.78333333333336], [1.5776922E12, 445.3666666666667], [1.57769382E12, 432.46666666666664], [1.57769274E12, 110.43333333333334], [1.57769304E12, 439.4], [1.57769214E12, 445.21666666666664], [1.57769244E12, 445.23333333333335], [1.57769202E12, 445.03333333333336], [1.57769232E12, 429.78333333333336], [1.57769394E12, 218.83333333333334], [1.57769142E12, 447.3333333333333], [1.57769334E12, 440.3333333333333], [1.57769172E12, 446.3], [1.57769364E12, 445.48333333333335]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.57769226E12, 0.16666666666666666], [1.57769256E12, 0.06666666666666667], [1.57769358E12, 0.36666666666666664], [1.57769196E12, 0.23333333333333334], [1.57769376E12, 0.03333333333333333], [1.57769346E12, 1.0333333333333334], [1.57769286E12, 0.6666666666666666], [1.57769316E12, 1.0333333333333334], [1.5776937E12, 0.3333333333333333], [1.57769208E12, 0.2], [1.5776931E12, 0.8], [1.5776934E12, 1.1666666666666667], [1.57769298E12, 0.8333333333333334], [1.57769328E12, 0.7333333333333333], [1.57769238E12, 0.13333333333333333], [1.57769322E12, 0.8], [1.57769352E12, 0.6666666666666666], [1.57769292E12, 0.9333333333333333], [1.5776925E12, 0.1], [1.5776928E12, 0.03333333333333333], [1.5776919E12, 0.16666666666666666], [1.5776922E12, 0.06666666666666667], [1.57769382E12, 0.06666666666666667], [1.57769304E12, 0.6], [1.57769214E12, 0.13333333333333333], [1.57769244E12, 0.16666666666666666], [1.57769202E12, 0.16666666666666666], [1.57769232E12, 0.13333333333333333], [1.57769142E12, 0.03333333333333333], [1.57769334E12, 0.8666666666666667], [1.57769364E12, 0.5333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57769394E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

